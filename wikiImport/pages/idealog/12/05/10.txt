h1. Idea log Thursday May 10, 2012

h2. Notes
usefulness of split view, sidewiki, higher levels of abstraction, sorting through information - both articles in wiki, also meetings with Jim.

difference between taking "synchronous" notes (notes that are indexed by the time they appear in the article or in recording) and topical notes.

link to tag-extract, same thing. (but works better for outlines, not narrative. 

transcribing/taking notes from an audio file is transforming it into a common "object of inquiry", similar to clippings from a raw PDF file. think about a non-OCRed file or a very heavily formatted etc, huge difference. text in wiki/scrivener is totally neutral. content is 100%. 

seems like such a fundamental basic pattern, yet KB, mind mapping etc does not support this way of working. assume that ideas come first, that ideas are linked in a network of ideas, like brain storming... concept mapping. come out of our heads. but in most cases, they come from stimuli, not from our heads :) role of readings in KB class...
--
I seem much better at thinking practically than theoretically... easy to come up with interesting ways of proceeding, trying stuff out, learning through doing so ... rather than coming up with all the deep philosophical justifications first without doing any empirical work. iterating. 
--
Does Etherpad Lite have an API for easily pulling out the text of a pad "right now"? (don't need colors, history etc)... and can we create a new pad programatically? have tag-extract like a bookmarklet etc, integrate into group workflow?
--
Writing-to-learn (from the 1980s) and today's use of discussion forums, blogs, note taking etc
http://edutechwiki.unige.ch/en/Writing-to-learn

Also computer-supported argumentation - two perspectives on what is going on in an online class (lower level than "knowledge community"
http://edutechwiki.unige.ch/en/Computer-supported_argumentation

Collective writing
http://edutechwiki.unige.ch/en/Collective_writing


h2. from Freydis talk:
1: need a flexible platform where you can easily script / experiment with different kinds of workflows, combination of etherpad, chat, graph tool, individual / dyad / smaller group - jigsaw etc etc

synchronous stuff

experiment with 2nd gen MOOC courses - especially EDx - how do we scale learning with 20,000 students - for programming, we can do video snippets, multiple choice, Python interpreter with hints etc.

for a class on history of democracy? a scaleable way to provide group discussion for very large amount of people - with tons of data... 

ability to collaborate with Frank Fischer's lab, and MIT or Udacity etc?

(see 1)

or "just" P2PU (great place to pilot test it, wouldn't get the same kind of numbers and statistics)

2nd gen MOOCs also great because they have clear expert-led syllabi and looking at accreditation, evaluation etc. get that "for free". 

not so relevant with 1st gen MOOCs because so unstructured... but maybe... 

link to SRL, SSRL
patform that mixes voice in dyads with environment for constructing artefacts... not just chat

relationship betwen scripting and scaffolding - scaffoldingis not so time-sensitive, more about design, UX, elements present which nudge you into doing certain things

workflow that is controlled by students - making the metalearning explicit an externalized, but letting students pick their own scripts
S-COL etc
file format for exahanging scripts

Fischer: all synchronous (short-term scripts) or also asynchronous longer-term scripts? is there a difeference in this for how easy it is to internalize etc, from other perspectives?
self-assessmnt, self-awareness
sript for automatic courses in P2PU, like hte article reading course
ability to mock up scripts using wizard of oz approach

given the amount of students in a big mooc, it might be easy to find someone else online to do an assignment, thus you get the benefits of synchronicity, without having to schedule etc... advantage of persistent (known) partner? chatroulette for learning...



any possibility of collaborating with MITx, Mitch Resnick? find out who are responsible for learning design at MIT/Harvard... Brandon Muramatsu? No the other Japanese guy... 
SRL and scripting in relationship to paragogy

Dillenbourg: script, scenography (more like what we're doing)
Fischer: microscripts, internal scripts (we might need them)

need for micro and macro-scripts with using Knowledge Forum

orchestration? implementation, adjustment of script in inquiry - adjustments that happen as things unfold - based on actual running of the class, emergent tags, ideas etc. orchestration points - frozen, teacher can come in (like breakpoints in code)

Ask Freydis to choose a best scripting paper to post on P2PU peer-learning group, and lead a discussion
---