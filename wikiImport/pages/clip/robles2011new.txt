h2. Highlights (38%)

t should be noted that the main reason for the participation of developers in open source projects, according to what they have answered in several surveys, is learning [5]. The knowledge acquired while participating in projects is not only technical one, such as programming, debugging, or documentation; other knowledge of legal (think of licenses, patents, etc.), organizational (such as teamwork, assessment of other's code, among others), and even personal (as accepting criticism from others or expressing their own opinions) nature have been noted by developers as very important [6]. [[skimx://robles2011new#1|p. 1]]

Libre software, also known as Open Source Software or Free Software, has already changed the way we know education. This influence goes from content -with examples such as the Wikipedia-, openness -for instance, the OCWor tools -like learning management systems or desktop applications. In this paper, we introduce some new trends that are inspired in the libre software movement and that may change education in the near future. Among others, experiences such a s the OpenSE project -where students can be 'free learners' outside of any type of formal educational contextor the p2p University -an online community of open study groups for short university-level courseswill be presented and discussed. [[skimx://robles2011new#1|p. 1]]

This article, however, focuses on procedural aspects that could be extrapolated from the libre software world (practices of creation and dissemination of knowledge) to the general educational sector. Thus, there are authors who argue that libre software is a good metaphor for e-learning, since both are based on constructivism, especially where pragmatism and instrumentalism pervades the theories of John Dewey where understanding is applied to learning [4]. In this sense, our perspective broadens the one of software platforms suggested previously and extends it to the one of philosophy of learning and learning practices. [[skimx://robles2011new#1|p. 1]]

To provide learning experiences from libre software projects. We must remember that learning in such environments means self-learning, distance learning and a strong use of telematic means. It should be noted that such learning is continuous, that participants often do it just for fun (though not exclusively) and that the product is usually high-quality software, sometimes even to the extent that it competes with professional software solutions. In the environments we are [[skimx://robles2011new#1|p. 1]]

sted in, learning does not usually follow a traditional curriculum framework, is totally informal and does not lead to the achievement of any official accreditation. The main goal from the organization is a product (usually a sofuvare), not learning per se. It is also important to note that in such environments learning is mostly focused on software artifacts or technical documentation, and that mentors exist - usually more experienced developers in the project. In any case, these roles (mentor vs. learner, experienced vs. unexperienced) are dynamic (the may change and may change frequently) and implicit (there is no assignation of roles). [[skimx://robles2011new#2|p. 2]]

Historically, a large number of certification programs related to libre software exist, although most of them focus on UNIX administration tasks1. [[skimx://robles2011new#2|p. 2]]

In this sense, Edwards analyzes the development of libre software as an epistemic community [7]. According to him, the development of libre software is a learning process where the parties contribute to and learn from a community. Therefore, the learning process in the world of libre software can only be explained by the introduction of situated learning and legitimate peripheral participation from a theoretical perspective and it is the combination of these theories that may offer some clues as to the motivation and group dynamics. Huntley studies the effects on organizational learning in libre software projects [8]. Using data from the the Apache web server and the Mozilla web browser projects, his study focuses on three aspects of libre software development: the approach to complexity, adaptive learning mechanisms during the debugging process and the effects of specific experiences in the project learning curve. [[skimx://robles2011new#2|p. 2]]

Seneca, a Canadian college, has developed an approach to involve students steadily in libre software communities [10]. [[skimx://robles2011new#2|p. 2]]

One of the characteristics of libre software projects is the accessibility to the source code, which encourages anyone with programming skills can help the project. In fact, much of the libre software philosophy is based on the principle of allowing participation to as many people as possible [11], using instruments and tools that enable asynchronous collaboration and distance learning. Among the most used collaboration tools we encounter eÂ­ mail lists, or alternatively, Internet forums. Thus, it is good practice if the projects have at least a couple of lists: one for developers and one for end users. In both, according to the theme of the list, it is expected that participants can raise concerns and questions to be answered by developers or expert users. Thereby a supportive community is created in general in [[skimx://robles2011new#2|p. 2]]

he book "Opening Up Education" argues that we should develop not only technical skills but also intellectual ones to transform tacit pedagogical knowledge into useful and visible knowledge [9]. [[skimx://robles2011new#2|p. 2]]

informal way, in which peer learning occurs and where the roles are not defined, and may change over time. However, many projects soon realized that the mere fact of having the source code available and support mailing lists is not enough to attract new participants. Thus, almost all major projects have tried to set up "institutional" initiatives to attract new contributors. And integrating a new participant into a libre software project largely consists of learning the technologies and processes used in the project. [[skimx://robles2011new#3|p. 3]]

The Ubuntu learning5 group is a group that serves as an umbrella for various educational initiatives within the Ubuntu project. It offers a website where all the Ubuntu learning initiatives are included, from uninitiated users to novice developers, documentation writers, translators and educators who want to teach with Ubuntu. [[skimx://robles2011new#3|p. 3]]

MySQL University [[skimx://robles2011new#3|p. 3]]

MySQL University2 is a technical education program aimed at participants in the development and inner workings of MySQL. MySQL University offers lectures via a web software called DimDim3 that uses flash technology. The sessions are open to the public and recorded including slides and audio, so if a student cannot attend them live, she can always download it afterwards. All material is available under a Creative Commons Attribution-ShareAlike. Anyone can propose a lesson, although they are given generally by MySQL AB (later Sun, and later Oracle) engineers. Although with interruptions, MySQL University sessions are weekly. Since the Sun acquisition by Oracle the future of this initiative, as well as of the whole MySQL project, is unclear . [[skimx://robles2011new#3|p. 3]]

The process to be admitted as a new Debian package maintainer is a learning process, while at the same time a selection process6. This is because the process itself is part of quality assurance efforts of Debian, so that those who enter as maintainers can demonstrate on the one hand a sustained and correct effort over time. Thus, it is a requirement that new maintainers have been involved in some way or another before the project. [[skimx://robles2011new#3|p. 3]]

GNOME Love [[skimx://robles2011new#3|p. 3]]

GNOME Love4 is an initiative that aims to help people who want to start contributing to the GNOME project, a libre desktop environment. The target audience of GNOME Love is broader than the one of MySQL University, and it does not focus exclusively on developers, but is also aimed at documenters, translators, testers and GNOME enthusiasts, in general, that might help in performing tasks such as marketing, journalism or organization of events, among others. [[skimx://robles2011new#3|p. 3]]

It is interesting to note that the process of admitting new Debian maintainers, as opposed to those who have seen before, is a well-defined process: the steps to be taken are clearly specified, roles are defined and understood, and the process is public and can be followed on-line. [[skimx://robles2011new#4|p. 4]]

openSE (Open Educational Software Framework For Computer Science Engineering7) is an initiative of institutions of higher education, libre software projects and companies in various countries of Europe and Africa. openSE provides educational materials focused on software engineering as well as resources and support so that students can carry out their own learning within the community of libre software. [[skimx://robles2011new#4|p. 4]]

Google Summer of Code (GSoC) is a program of scholarships I internships funded by Google during the summer months, and which began in 2005. The aim is that college students can perform remunerated work offered by participating organizations, most of them libre software projects. [[skimx://robles2011new#4|p. 4]]

The novelty of the openSE project is that it systematically combines formal and informal learning in an informal and unrestricted learning environment. openSE pretends to stimulate participatory learning experiences, including practical sessions where the activities of learning and its product may become learning resources by themselves by getting prospective students to benefit from the findings of others. [[skimx://robles2011new#4|p. 4]]

The University P2P (Peer 2 Peer University or P2PU)8 is a project carried out by volunteers that organizes courses outside institutions and gives students recognition for their achievements. The project began in 2008 with five people and now comprises a community of about a thousand participants. The basic idea is to offer lifelong learning in parallel to traditional formal education. Educational materials are available on the Internet with the intention of providing opportunities for low-cost but high quality materials. [[skimx://robles2011new#5|p. 5]]

But the process from information to knowledge is still a barrier that has to be circumvented by learners. Libre software projects face this when integrating new contributors. Although the source code is available, and much of the process can be easily retrieved (mailing lists, bug reports, etc.), the knowledge that newcomers have to acquire requires practice, support and feedback. Some large libre software projects offer some solutions to help mainly developers joining the project, as has been shown in this paper. These solutions are based on following aspects: [[skimx://robles2011new#5|p. 5]]

1. Learning is done in a community. There is not a single learner that is isolated. Learning is a process of communication, that allows information to become knowledge, that makes experienced developers become mentors -even if they are not aware of itof newcomers. 2. There are sometimes roles, but these are dynamic and often not assigned. The process is informal; there is in general no syllabus and no curriculum. 3. The learning process goes beyond the organization. Anyone can join, reuse the content and the knowledge. No affiliation is required. 4. There is a trend towards professionalization of those in charge of making the community keep on learning. This does not mean that these professionals have always the role of mentors; their role is more the one of facilitators, so that others -probably volunteersÂ­ may offer themselves for mentoring roles. 5. There is usually no accreditation. Recognition is given inside the community, but there are seldom ways of making this valid outside of the community. [[skimx://robles2011new#5|p. 5]]

The P2PU and Mozilla are therefore exploring new ways to of measuring and recognizing the skills and competencies acquired by students, particularly in reference to web development. Thus, a pilot experience in 2011, will consist of the issuance of badges to those who have passed certain tests and challenges. [[skimx://robles2011new#5|p. 5]]

Finally, the initiative that is closest to a libre software environment is the one by the P2P University: there community-centered learning is a main factor and mentoring is dynamic. The learning process goes beyond the organization and there are efforts to have experts in setting up courses that may help anyone wanting to share valuable knowledge and experiences. Its main drawback is the lack of recognition [[skimx://robles2011new#5|p. 5]]

ï¿¼outside this community, a problem that libre software project participants may minder if they show steadily commitment to a project (for instance, providing facts about the developments performed or the commits in the source code versioning system). New ways, such as the ones that are tested with Mozilla, should be explored in order to achieve such external recognition if this initiative wants to be considered with its full potential. [[skimx://robles2011new#6|p. 6]]

X. REFERENCES [[skimx://robles2011new#6|p. 6]]

