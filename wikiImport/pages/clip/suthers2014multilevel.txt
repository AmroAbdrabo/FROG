h2. Highlights (20%)

doing and how they are doing it but at a level of detail that obscures larger scale patterns, with (social) network analysis, which provides summaries of ties and affiliations in a form amenable to drawing conclusions about network or community patterns but loses the details of how people actually interact. [[skimx://suthers2014multilevel#1|p. 1]]

a richer understanding of learning in socio-technical networks will be furthered by analytic methods that can move between and coordinate analyses of individual, small group and network level phenomena. [[skimx://suthers2014multilevel#1|p. 1]]

The methods build on empirical relationships between events to build a graph of uptake relations—how one event builds on another, which are then used to identify sessions in the space-time dimensions of a rich online environment, identify key actors within sessions using sociometrics, and find relationships between sessions that might be vectors for the transmission of ideas or practices. [[skimx://suthers2014multilevel#1|p. 1]]

Theories of how learning takes place in social settings vary in the agent of learning (e.g., individual, small group, or community), and in the process or ‘mechanism’ of learning [16] (e.g., information transfer or knowledge communication [4], intersubjective meaning-making such as argumentation and co-construction [1, 15], shifts in participation and identity [8, 12], and accretion of cultural capital [13]). [[skimx://suthers2014multilevel#1|p. 1]]

To preview, we match for their complementary strengths and weaknesses both interpretative and computational interaction analysis, which enable us to see what groups of individuals are [[skimx://suthers2014multilevel#1|p. 1]]

we compute contingencies between events, to produce a model of how acts are mutually contextualized. Human action is contingent upon its setting in diverse ways: our computational methods capture some of these contingencies that are amenable to automated detection. For example, a temporal contingency reflects the likelihood that events occurring close together in time are related. For example, in analyzing quasisynchronous chat contingencies are installed to prior contributions that occur within an adjustable time window but not too recently (under a Keystroke Level Model of how long an expert typist could have typed the contribution, to ensure that the taken up contribution was already visible [11]). Address and reply contingencies are installed from an utterance mentioning a user by name to the last contribution (address) and next contribution (replay) by that participant within a time window. Contingencies are installed to prior acts of a participant over a larger time window to reflect the continuity of an agent’s purpose. Overlap in content as represented by sets of lexical stems is used to produce a lexical contingency weighted by the number of terms overlapping. The resulting contingency graph is represented in our own Traces framework, the Entity-Event-Contingency graph or EEC, which permits multiple edges between vertices (events). [[skimx://suthers2014multilevel#2|p. 2]]

not specific to a medium (it can cross media) or limited to transactivity (one can uptake without being “other-directed”). Contingencies are of interest only as evidence for uptake. So, we abstract the contingency graph to an uptake graph, using a weighted (and presently linear) combination of the various types of contingencies between contributions (vertices) to derive a single uptake relation represented as a graph edge weighted to reflect strength of evidence in the contingencies. In our framework, different weights can be used for different purposes (e.g., finding sessions; analyzing the interactional structure of sessions): the weighting schemes are declared using XML as shown in Table 1. [[skimx://suthers2014multilevel#2|p. 2]]

uptake graphs are similar to contingency graphs in that they also relate events, but they collect together bundles of contingencies into uptake relations, optionally filtering out low-weighted bundles. At this point, we can do several interesting things with these uptake graphs. A graph clustering or “community detection” algorithm (e.g., modularity partitioning, [3, 5]) is then applied to the uptake graph to find clusters of related contributions that we call “sessions”. A session can cross settings such as chat rooms. Inter-session and intra-session analysis procedes from here. [[skimx://suthers2014multilevel#2|p. 2]]

For inter-session analysis, we collapse each session into a single vertex representing the session, but retain the inter-session uptake links. These inter-session links indicate potential influences across time and space from one session to another. [[skimx://suthers2014multilevel#2|p. 2]]

we are interested in uptake, the relationship between events in which a human action takes up some aspects of prior events as being significant in some manner. For example, replying to prior contributions in a chat or discussion is an example of uptake, but the concept of uptake is [[skimx://suthers2014multilevel#2|p. 2]]

For intra-session analysis, the uptake graph for a session is isolated. Two paths are possible from here. The sequential structure of the interaction can be micro-analyzed to understand the development of group accomplishments: this part is not automated. Or we can fold the uptake network into an actor-actor sociogram (directed weighted graph), where the tie strength between actors is the sum of the strength of uptake between their contributions. This sociogram can be analyzed using conventional (social) network analysis methods such as with eigenvector centrality to identify key actors, etc. [[skimx://suthers2014multilevel#3|p. 3]]

In either case, uptake that crosses partitions can be used to identify influences across space and time, and uptake within partitions can be analyzed to study the interactional structure of a session. Uptake graphs may be folded into networks where nodes are actors rather than events, to which sociometrics are applied. Another line of analysis not discussed in this paper is to fold events into actor-artifact networks, or bipartite weighted directed graphs that are called “associograms” for short, because they capture how actors are associated with each other via mutual read and write of media objects. In other work, we have undertaken community analysis of associograms to detect not only human participants in communities, but also the artifacts that reflect their mediate nature (e.g., synchronous or asynchronous) [18]. [[skimx://suthers2014multilevel#3|p. 3]]

