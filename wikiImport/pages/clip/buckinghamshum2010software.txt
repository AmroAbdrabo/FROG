h2. Highlights (37%)

Abstract. This paper reports progress in realizing human-agent argumentation, which we argue will be part of future ::::Computer-Supported Collaborative Argumentation (CSCA) tools::::. With a particular interest in argument mapping, we present two investigations demonstrating how a particular agent-oriented language and architecture can augment CSCA: (i) the use of the IBIS formalism enabling Brahms agents to simulate argumentation, and (ii) the extension of the Compendium tool by integrating it with Brahms agents tasked with detecting related discourse elsewhere. [[skimx://buckinghamshum2010software#2|p. 2]]

Computer-Supported Collaborative Argumentation (CSCA) research seeks to augment human dialogue, deliberation and argumentation with appropriate software support, with a significant interest in how the visualization of these discourse structures can augment personal and shared cognition [1,2,3] [[skimx://buckinghamshum2010software#2|p. 2]]

Argumentation in Multi-Agent Systems (MAS) research is investigating how argumentation theory can provide software agents with greater capacity to reason and negotiate, in order to resolve competing priorities or recommended courses of action. [[skimx://buckinghamshum2010software#2|p. 2]]

Parallel to this, our long-term objective is the design of human-agent interaction (HAI), a subset of which implicates human-agent argumentation. [[skimx://buckinghamshum2010software#2|p. 2]]

Brahms, a particular agent-oriented language and architecture developed at NASA [7] can augment CSCA [[skimx://buckinghamshum2010software#2|p. 2]]

enabling software agents to interact about competing options using argumentation, and [[skimx://buckinghamshum2010software#2|p. 2]]

the extension of the Compendium CSCA tool by integrating it with agents tasked with detecting related discourse elsewhere and enabling the ability to share discussion topics and argumentation [[skimx://buckinghamshum2010software#2|p. 2]]

between different context. To convey the kind of use case that we are designing for, consider this scenario: [[skimx://buckinghamshum2010software#3|p. 3]]

Susan is one of a team of analysts at a commodities trading firm. The team is seeking to understand how climate change may impact the markets they follow, and have assigned different staff to specific topics. Aware that this is a highly contested issue, Susan creates a new project in her argument mapping tool, and records the results of her research in a set of maps, tracking Questions, potential Answers, and relevant Arguments to help reflect on the trustworthiness of the information she is gathering. She skims a climatology book to identify major themes, before going online to examine government advice, business analyses, and climate change advocacy groups from the different sides. Her argument- mapping tool includes a supporting personal software agent that in the background has access to a network of other intelligent software agents that can check if there are related conversations/analyses on the net. She can view suggestions from her agent, and add the most relevant to her own analysis. Some of the suggestions come from agents monitoring her colleagues’ maps; others are mining online discussions in interoperable platforms, while others are trained to perform their own research on specific online databases. Moreover, some agents are capable of working together to construct their own argument maps around a given issue, which are then proposed to the analyst as contributions. [[skimx://buckinghamshum2010software#3|p. 3]]

the complexity of the arguments invites CSCA support, although as we discuss elsewhere [11], the evidence is that before deep dialogue has helped to build common ground and trust, clear argumentation on its own will never be sufficient. [[skimx://buckinghamshum2010software#3|p. 3]]

Secondly, in the context of two space exploration field trials, we have reported how templates enabled software agents both to read and write Compendium maps [16], enabling Compendium to play a multiplicity of roles: 
  *  As a way to create formal information structures for understanding by software agents, from informal discussions by people. 
  *  As a way to navigate richly linked data and metadata in maps written by software agents; 
  *  As a real time discourse mapping environment for both co-located and online meetings; 
  *  As an asynchronous medium for distributed team conversation; 
  *  As an asynchronous medium for scientists to program software agents; 
  *  Combining planned, formal modelling, with interpretive scientific and project management discourse which could move in unpredictable directions. [[skimx://buckinghamshum2010software#5|p. 5]]

IBIS. Debategraph [18], Deliberatorium [19], and Cohere [20] seek to exploit the benefits of a web user interface and Web 2.0 services. An ongoing project is designing and testing a common serialization format for these platforms [21]. Apart from the possibility for diverse platforms to exchange data, web services and agent architectures point to the possibility of ::::federating IBIS dialogue/argumentation [22].:::: [[skimx://buckinghamshum2010software#5|p. 5]]

Brahms [7] is an agent-oriented language and agent simulation and execution environment that has been under development for over a decade. It provides a way to model activity and communication practices of groups of people and multi-agent systems, and contrasts to other belief-desire-intention (BDI) agent languages, as discussed in [23]. [[skimx://buckinghamshum2010software#5|p. 5]]

Brahms is a mature agent architecture used at NASA’s International Space Station Mission Control Center [24], and underpinning large scale e-science infrastructures such as the Mobile Agents Architecture (MAA), which provides a means for modelling, simulating, implementing and managing a computer-supported Mars/Earth-based science work system [25]. [[skimx://buckinghamshum2010software#6|p. 6]]

Brahms agents are belief-based and use situation-action rules to perform activities. One type of activity is communicating with other agents, whether other Brahms agents or agents implemented in the Java language. The Brahms language provides a communications library enabling the design of specific agent communication protocols, based on speech act theory [26], as defined by the FIPA agent communication standard [ 27 ]. Using a combination of belief-based Brahms agents and a standardized communications protocol for IBIS conversations between agents, we developed our Brahms framework for collaborative argumentation (CA). It is our belief that this CA framework can be extended to become a general framework for human-agent CA. Here we explain the Brahms communication library. In the next section we discuss the Brahms IBIS protocol. [[skimx://buckinghamshum2010software#6|p. 6]]

The Brahms communication library defines the FIPA communication act as the Brahms object class CommunicationAct. An instance (called a comact) of this class has to be created by the agent that wants to communicate about a particular topic (called the payload of the comact). The other attribute of a comact is the comact’s envelope, specifying the sender and receiver information. The Brahms Communicator group defines a number of activities for creating comacts and communicating (i.e. sending) comacts to other agents (a Brahms activity is a predefined action or plan taking an amount of time to complete). The payload content of a comact is not defined in the CommunicativeAct class, but is specified by FIPA and can be designed by the modeler. [[skimx://buckinghamshum2010software#6|p. 6]]

Perhaps the biggest change in transitioning from human to agent IBIS argumentation is the role of the facilitator. For human IBIS argumentation, the facilitator is responsible for both translating specific comments made by the group into individual IBIS nodes as well as maintaining the overall structure of the IBIS conversation. With agent IBIS argumentation, there is no longer a need for the facilitator to parse suggestions and ideas from the participants into their proper IBIS notation. Instead, we can develop agents that are capable of expressing their beliefs directly through IBIS nodes. [[skimx://buckinghamshum2010software#6|p. 6]]

While the agent facilitator is no longer required to perform translation, the task of maintaining the structure of an IBIS conversation between agents is much more difficult than in the human case. It is easy enough for a human facilitator to identify if an idea being proposed has already been summarized in the IBIS conversation. Agents lack this innate ability and thus the agent facilitator must search through the IBIS conversation to ensure that an IBIS node is unique before adding it to the conversation. [[skimx://buckinghamshum2010software#6|p. 6]]

IBIS nodes and IBIS notation play an enhanced role in agent IBIS argumentation. In human IBIS argumentation, the IBIS notation is not the same as the discussion, but the IBIS notation is used as a captured summary of the real-life dialogue, serving to focus and improve the quality of the discussion and create shared understanding between the discussion participants. Contrast this with the agent IBIS argumentation case, where the actual “discussion”1 between agents is taking place directly through the IBIS notation. Therefore, it is necessary to give the IBIS nodes for agent argumentation additional expressive power that is not present in human IBIS argumentation. IBIS nodes are represented in the framework as shown in Figure 2. [[skimx://buckinghamshum2010software#7|p. 7]]

Simulating the Federal Aviation Administration’s (FAA) Collaborative Convective Forecast Product (CCFP) chat sessions tested our agent IBIS argumentation framework. This online, text-based chat consists of meteorologists representing a variety of organizations (Aviation Weather Center, regional Air Route Traffic Control Centers, airlines, etc.) collaborating to form a consensus weather forecast. The forecaster for the Aviation Weather Center (AWC) is responsible for leading the chat as well as producing the final forecast. A typical CCFP chat begins with the AWC forecaster presenting their initial forecast. They then open up the discussion to see if any participants have modifications to suggest. The final forecast is then used as the primary weather analysis for the FAA's strategic planning teleconference. [[skimx://buckinghamshum2010software#8|p. 8]]

The text-based nature of the chat sessions appears to have a negative impact on the effectiveness of the collaboration. Problems include participants responding to questions out of order, failing to identify the question to which they are responding, and suggesting ideas without any kind of justification. As a result, the chat transcripts become convoluted, which diminishes their value as a record of the participants’ decision-making process and serves to decrease the overall amount of participation. For these reasons, rather than simulating the CCFP chat sessions verbatim, we are suggesting the use of IBIS as a method for structuring the discussion. [[skimx://buckinghamshum2010software#8|p. 8]]

The model we describe next is a first prototype of a scenario in which some of the knowledge held currently by human participants can be held and negotiated by agents. The model shows that the human collaboration during the CCFP chat can be formalized and modeled in an agent-based simulation, using the IBIS formalism. [[skimx://buckinghamshum2010software#8|p. 8]]

We turn now to the second investigation into human-agent argument mapping: extending our CSCA mapping tool (Compendium) with agents (Brahms), in order to enable agent- based search of remote IBIS maps. Coupling Compendium to Brahms entails the creation of a Java class that serves, within Compendium, as a host for Brahms. [[skimx://buckinghamshum2010software#10|p. 10]]

To define terms that will be used in the following section, we refer to one Compendium- Agent pair as local, and other pairs as remote. In our user scenario, a local pair serves “Susan” as her argument-mapping platform. One or more remote pairs behave as if they are database servers capable of responding to simple queries. [[skimx://buckinghamshum2010software#11|p. 11]]

Figure8 illustrates the additional feature that provides a menu item for requesting an agent to search for nodes to satisfy a given query. Figure 9 illustrates the query being formed. Note that the ‘%’ character serves as a wildcard: the query will match IBIS nodes that offer ‘climate’ inside any sentence. The query is broadcast from the local Brahms agent to available remote agents. Our first iteration restricts that broadcast to one remote agent coupled to a second instance of Compendium, the database containing other IBIS conversations. Our prototype implements a simple SQL query to the remote Compendium’s database. Any node that has a statement that includes the word "climate" will be returned, as illustrated in Figure 10. [[skimx://buckinghamshum2010software#11|p. 11]]

Brahms already provides the low-level protocols for distributed internet-based MAS. IBIS-agents seeking to connect and federate IBIS conversations over the Internet will need to infer potential connectedness based on different (non-exclusive) strategies, currently under review [22]. One strategy seeks to exploit the contextual cues provided by IBIS structure, for instance, if two Issues in two different maps are similar, then arguably, they establish similar contexts for comparing the nodes connected to them. Another strategy would add more sophisticated language processing to parse node labels. A third strategy is to use topic mapping federation techniques. [[skimx://buckinghamshum2010software#12|p. 12]]

Finally and most ambitiously, the Brahms language has been shown in a range of NASA mission contexts to be capable of modelling and implementing multi-agent systems to scaffold authentic work practices. This expands our vision for computational modelling of argumentation: it could be possible to move beyond modelling the micro-worlds of agent-agent and human-agent argumentation, to conceiving and modelling the broader work system in which this takes place, considering the actors and contexts that cause new issues to be raised, constraining the options and tradeoffs, and with an understanding of who or what may then make use of the results of argumentation. [[skimx://buckinghamshum2010software#12|p. 12]]

7. References [[skimx://buckinghamshum2010software#13|p. 13]]

