h2. Highlights (51%)

In recent years several educators have organized open courses where participants reflect on their personal blogs. With a large number of participants it becomes a challenge to follow all the course discussions. In this paper we present the EduFeedr system that is specifically designed for following and supporting student activities in blog-based courses. [[skimx://poldoja2010edufeedr#1|p. 1]]

learning is a social process and open content is not the only way to change the educational system towards openness. In addition to open content we need open learning environments and teaching practices. [[skimx://poldoja2010edufeedr#2|p. 2]]

In spring term 2008 the author of this paper was a co-facilitator on a similar course in University of Art and Design Helsinki. On that course the facilitators used a course blog in addition to wiki pages in Wikiversity (Leinonen et al, 2009). Wiki served as a course outline while more detailed guidelines about weekly assignments were posted to the course blog. Following all the participants and managing the learning environment was quite a challenge since more than 70 people signed up for the course. Simple tasks like setting up a blogroll and subscribing the RSS feeds required a lot of manual work. Also the participants found it complicated to follow a large number of blogs. In later courses the author has used online feed readers (e.g. Pageflakes, Netvibes) to create shared pages that contain blog posts and comments from all participant blogs. However, these solutions do not scale well with a large number of participants. [[skimx://poldoja2010edufeedr#2|p. 2]]

In this paper we present the EduFeedr system that is specifically designed for following and supporting student activities in blog-based courses (EduFeedr, 2010). [[skimx://poldoja2010edufeedr#2|p. 2]]

There are several aspects that make it difficult to follow student activities in massive open online courses. The number of participants is not only large but it is also constantly changing. People continue to join the course after it has started and many participants do not complete the course. Therefore it is complicated to have an up-to-date list of active participants. It is common, that course activities take place not only in blogs but also in other Web 2.0 environments (Twitter, Delicious, etc.). Learning resources may be also published in several locations depending on the type of resource (presentations in SlideShare, videos in YouTube, etc). This information could be aggregated if participants have agreed on the course tag that they will use in other systems. [[skimx://poldoja2010edufeedr#3|p. 3]]

Feed readers display only updates from active users. In a course setting it is also important to notice, when some participants haven’t posted anything for a while. Getting comments and feedback may motivate them to continue with the course. Current feed readers do not take into use the social network data that comes from links and comments between the blogs. There is no centralized way to see all the comments that a person has made in other blogs. It is common that commenting other participants’ blog posts is one of the assessment criteria in the courses where learners use blogs. Also it might be difficult to identify who has written the comment, because people do not have to log in to write comments. Finally, the information in this kind of learning environment may disappear quickly. We have learned that some people make their blogs private after they have completed the course. In order to aggregate the blog posts they should be available in the RSS feed. These feeds contain only most recent blog posts. In a similar way Twitter shows only most recent tweets when they are searched by a hashtag. In EduFeedr project we are trying to address these challenges by developing an online feed reader that could be used for enrolling to the course and following the course activities that take place in a distributed learning environment. [[skimx://poldoja2010edufeedr#3|p. 3]]

The use of technological tools in massive open online courses has been studied by Fini (2008). He analyzed learners’ attitudes towards the tools that were used in the Connectivism and Connective Knowledge 2008 course. This course had a quite diverse learning environment where Moodle, Google Groups, Twitter and several other tools were used in addition to blogs. According to this study a shared feed reader Pageflakes was considered the least useful tool. Stephen Downes has developed a gRSShopper newsletter software that is used in the Connectivism and Connective Knowledge course and his other open courses (Downes, 2010). The participants have to submit addresses of their blogs and the system will aggregate all the blog posts that contain the course tag. The facilitator will send out a daily newsletter that contains summaries of selected blog posts and Twitter tweets with the course hashtag. [[skimx://poldoja2010edufeedr#3|p. 3]]

There have been attempts to add blog aggregation to institutional learning management systems (LMS’s). One of these is BAM that is integrated with Webfuse LMS (Jones, 2009). A newer version named BIM is a blog aggregation module for Moodle (Jones, 2010). P2PU has customized Drupal content management system to provide open courses on a centralized platform (P2PU, 2010). However, their courses have typically a limited number of participants and they do not have to deal with hundreds of people in a same course. [[skimx://poldoja2010edufeedr#4|p. 4]]

In the contextual inquiry phase the authors of EduFeedr organized 4 blog-based courses where they used various online feed readers to aggregate blog posts. The main limitations of current feed readers came out during these courses. [[skimx://poldoja2010edufeedr#4|p. 4]]

The designers wrote six scenarios that described how teachers and students used an educationally enhanced feed reader named EduFeedr. These scenarios included (1) first experience with EduFeedr, (2) posting a response to the assignment on the student blog, (3) exploring the connections between student blogs, (4) setting up course feeds, (5) archiving course posts and comments, and (6) using the offline client. [[skimx://poldoja2010edufeedr#4|p. 4]]

These scenarios were initially presented in the Open Education course organized by Mozilla Foundation, ccLearn and Peer 2 Peer University. A set of questions was prepared about each scenario and it was possible to comment the scenarios in a wiki. Later two participatory design sessions were organized with people who have been teaching in blog-based courses. In these sessions the participants read the scenarios and we had a structured discussion based on the questions about each scenario. The participants agreed with most of the scenarios but they were quite critical about some details. For example it came out that they do not expect that most of their students will start adding tags to their blog posts. [[skimx://poldoja2010edufeedr#4|p. 4]]

The final phase of research-based design is software prototype as hypothesis. Our hypothesis with EduFeedr is that distributed learning environments need a central component that will collect, combine and present the learning activities that take place in learners’ personal learning environments. Early prototypes were tested internally using data from old courses. The first public prototype of EduFeedr was made available in September 2010. [[skimx://poldoja2010edufeedr#5|p. 5]]

EduFeedr is designed so that only facilitator needs a user account in the system to set up the course. Anybody can view the aggregated blog posts and comments without logging in. When setting up the course it is important to specify the location of the course blog where all the assignments will be published. [[skimx://poldoja2010edufeedr#5|p. 5]]

Each course is divided into six sections: (1) course feed, (2) course info, (3) participants, (4) assignments, (5) progress, and (6) social network. The first section is a Course feed that displays 10 most recent blog posts and comments from the course (see Figure 1). The facilitator can hide those posts and comments that are not related with the course. [[skimx://poldoja2010edufeedr#5|p. 5]]

In the assignments page the facilitator has to specify these blog posts in the course blog that contain assignments. When participants write their responses to the assignments their blog posts should contain a link to the assignment in the course blog. Based on these links we can display a progress diagram that shows how many assignments the participants have completed. An example progress diagram is on Figure 2. From the progress diagram it is possible to access individual blog posts. It means that it is possible to read the course blogs without leaving EduFeedr. Only comments have to be written in participants’ blogs. [[skimx://poldoja2010edufeedr#5|p. 5]]

The last section has a social network diagram that shows connections between the participants. A connection is made when one links or comments another participants’ blog post. The comments are connected with the course participants based on the URL that was submitted in the comment metadata. The social network data can be also downloaded in tab separated format. This can be used in external visualization services such as ManyEyes by IBM. [[skimx://poldoja2010edufeedr#5|p. 5]]

Technically EduFeedr is built as a plug-in for Elgg social networking engine. We decided to use Elgg because we have previous experience with the platform (Sillaots & Laanpere, 2009). EduFeedr works as a frontend, that displays aggregated course data from local database. Aggregating the blog posts and comments is handled by a separate web service component named EduSuckr. We have also used various open source libraries such as SimplePie, JSViz and NuSOAP. The source code of EduFeedr is available under the GNU General Public License v2. [[skimx://poldoja2010edufeedr#6|p. 6]]

We are going to continue the development of new features after fixing the found defects and analyzing the user feedback from the first courses. Some plans for future developments include (1) aggregating recent content from various Web 2.0 services that are used in courses (Twitter, Delicious, SlideShare, etc.), (2) providing visualization widgets that could be embedded in external web sites and (3) archiving the course posts and comments. [[skimx://poldoja2010edufeedr#6|p. 6]]

Bibliographic references [[skimx://poldoja2010edufeedr#8|p. 8]]

Downes, S. (2010). New Technology Supporting Informal Learning. Journal of Emerging Technologies in Web Intelligence, 2(1), 27–33. [[skimx://poldoja2010edufeedr#8|p. 8]]

Jones, D., Luck, J. (2009). Blog Aggregation Management: Reducing the Aggravation of Managing Student Blogging. In G. Siemens, & C. Fulford. (Eds.). Proceedings of World Conference on Educational Multimedia, Hypermedia and Telecommunications 2009 (pp. 398–406). Chesapeake, VA: AACE. [[skimx://poldoja2010edufeedr#8|p. 8]]

Jones, D. (2010). BIM – Feed Aggregation Management and Marking. Retrieved from http://davidtjones.wordpress.com/research/bam-blog-aggregation-management/ [[skimx://poldoja2010edufeedr#8|p. 8]]

Leinonen, T., Toikkanen, T, & Silfvast, K. (2008). Software as Hypothesis: Research-Based Design Methodology. In Proceedings of Participatory Design Conference 2008, Indiana University, Oct 1–4 2008. [[skimx://poldoja2010edufeedr#8|p. 8]]

Leinonen, T., Vadén, T., & Suoranta, J. (2009). Learning in and with an open wiki project: Wikiversity’s potential in global capacity building. First Monday, 14(2). Retrieved from http://firstmonday.org/htbin/cgiwrap/bin/ojs/index.php/fm/art icle/view/2252/2093 [[skimx://poldoja2010edufeedr#8|p. 8]]

