h2. Highlights

This paper introduces Gridcole, a new system that can be easily tailored by educators in order to support the realization of scripted collaborative learning situations. To do so, educators can provide a script specifying the sequence of activities to be performed by learners as well as the tools and documents required to support them. Gridcole can then search for these tools in a service-oriented grid in order to integrate them so that they are available for users during the realization of the situation. Significantly, Gridcole has two features that are not supported by other tailorable systems. First, it allows the integration of tools that use supercomputing capabilities or specific hardware resources, thus enabling the possibility of supporting many situations in which this type of tools is required. Besides, Gridcole can guide learners during the reali- zation of collaborative learning situations according to the sequences of activities specified in the scripts. This way, learners can benefit from the advantages of scripted collaborative learning. Gridcole has been evaluated using three collaborative learning situations conceived for real courses at university level. The results of the evaluation show that Gridcole does pro- vide the desired properties concerning tool integration and activity guidance as well as that the proposed system can pro- vide adequate support for a wide range of collaborative learning situations. [[skimx://bote2008gridcole#155|p. 155]]

many sys- tems have been proposed in order to support the realization of different collaborative learning situations. These systems, called collaborative learning systems, typically provide an environment with a number of tools that may be employed by users to carry out the learning activities of a given situation. For instance, C- CHENE (Baker & Lund, 1996) is a simple collaborative learning system aiming to teach concepts related to energy in physics that provides an environment including a structured chat tool and a collaborative energy chain editor tool. [[skimx://bote2008gridcole#156|p. 156]]

tailorable collaborative learning systems enable educators and/or students to easily integrate external tools in order to support the realization of new situations. This is the case of several systems that can be found in the literature such as Dare (Bourguin & Derycke, 2001), Symba (Betbeder & Tchounikine, 2003), and Cure (Haake, Schu ̈mmer, Haake, Bourimi, & Landgraf, 2003). More specifically, in Dare and Symba both students and educators can define the tasks to be performed in a collaborative learning situation as well as integrate the tools that will be available during the realization of each task. In Cure, the tools are integrated by educators and made available in virtual rooms where students perform different collaborative learning activities. In any case, these tailorable collaborative learning systems have three important drawbacks. [[skimx://bote2008gridcole#156|p. 156]]

The first drawback is that these systems do not enable the integration of tools requiring supercomputing capa- bilities. As a consequence, the use of tailorable systems is limited in many areas such as engineering, medicine and natural sciences in which such tools are needed. For instance, consider a surgery school where students learn collaboratively to operate. In such scenario, supercomputing capabilities are required to compute high quality visualizations of a complex human body model, which is collaboratively manipulated by students in real time. Covis (Ramamurthy, Wilhelmson, Pea, Louis, & Edelson, 1995) is an example of a non-tailorable collaborative learning system in which supercomputing capabilities are required to generate real weather map predictions that can be visualized by students. Covase (Jensen, Seipel, Nejdl, & Olbrich, 2003) is another non- tailorable system that requires supercomputing capabilities in order to generate 3D complex models of fluid dynamics with which students can interact. [[skimx://bote2008gridcole#156|p. 156]]

Furthermore, these systems do not allow the integration of tools that employ specific hardware resources, i.e. devices and computers with very particular features. Again, there are many scenarios in which the support provided by tools employing specific hardware resources is required. For example, the realization of collab- orative learning situations within the context of a laboratory of electronics could involve the use of devices such as signal generators and oscilloscopes. This scenario is supported by Pearl Laboratory (Martins Ferreira, Alves, Costa, & Hine, 2002), which enables the realization of experiments in a remote laboratory of electron- ics. Pearl is thus a good example of a non-tailorable collaborative learning system that employs specific hard- ware resources. Another example is Roboteach (Despres & George, 1999), which is a system that allows students to control a microrobot during the realization of learning situations that aim at helping students to understand fundamental concepts of robotics. [[skimx://bote2008gridcole#156|p. 156]]

Finally, these systems do not support scripted collaborative learning. [[skimx://bote2008gridcole#156|p. 156]]

Universante ́ (Dillenbourg, 2002) is an example of a non-tailorable system that supports scripted collaborative learning with the aim of helping students to learn strategies to cope with different health problems. The same feature is provided by Arguegraph (Jermann & Dillenbourg, 2003), [[skimx://bote2008gridcole#156|p. 156]]

Tools integrated in Gridcole are not restricted in terms of supercomputing capabilities or specific hardware needs. This is achieved by means of enabling seam- less integration of tools offered as services (Foster, Kesselman, & Tuecke, 2004) by external providers within the context of a computational grid (Berman, Fox, & Hey, 2003). Significantly, the use of a grid infrastructure allows tools to access large amounts of computational power or specific hardware resources whenever it is required. Furthermore, Gridcole also performs the interpretation of collaboration scripts provided by educa- tors in which the collaborative learning situations to be supported by the system are formally described using the IMS Learning Design (IMS-LD) specification (IMS Global Learning Consortium, 2003a). [[skimx://bote2008gridcole#157|p. 157]]

IMS-LD is an XML-based educational modeling language that can be used to formalize a teaching-learn- ing process in a document called learning design (IMS Global Learning Consortium, 2003a). More specifically, a learning design describes a learning scenario in terms of a learning flow, and a set of environments. The learn- ing flow defines the sequence of activities that should be performed by learners in order to achieve predefined pedagogical objectives. Environments are described in terms of the resources, i.e. tools and contents, which should be provided to learners during the realization of each activity. The activities defined in a learning design are always associated to one or more roles. Each role may be assigned to a single participant of a learning scenario or to a group of participants. Collaborative activities can thus be defined in a learning design by assigning multiple participants to the same learning activity (IMS Global Learning Consortium, 2003a). As shown in (Bote-Lorenzo et al., 2004b), the IMS-LD specifica- tion can be used to formalize collaboration scripts when combined with the extension proposed in (Herna ́n- dez-Leo, Asensio-Pe ́rez, & Dimitriadis, 2004). Learning designs can be enacted by learning flow engines such as Coppercore (Martens & Vogten, 2005) or COW (Vantroys & Peter, 2003). Such engines can interpret the IMS-LD designs so as to determine the sequence of activities that must be performed by the participants of a learning scenario as well as the tools and documents that can be employed in each activity. Thus, learning flow engines can also be employed in order to interpret IMS-LD based collaboration scripts with the aim of supporting scripted collaborative learn- ing within the context of a collaborative learning system. Interestingly, IMS-LD can also be used in combination with other specifications. Particularly, the IMS Learning Resource Metadata (IMS-LRM) specification (IMS Global Learning Consortium, 2001) can be employed in order to include in a learning design generic descriptions of the tools and documents required to support the different learning activities. Besides, the IMS Content Packaging (IMS-CP) specification (IMS Global Learning Consortium, 2003b) enables the packaging of a learning design in a file called unit of learning along with the tools and documents to be used in a learning scenario or, alternatively, the refer- ences that may be employed to locate such resources. [[skimx://bote2008gridcole#157|p. 157]]

Reload editor (Reload Project, 2005), a tool that hides much of the complexity of IMS-LD when editing a learning design. Collage (Herna ́ndez-Leo et al., 2006) is another learning design editor that facilitates the edition of IMS-LD based collaboration scripts using well-known collaborative patterns. This latter editor may be specially useful for many educators since it has been specifically conceived for users not having technical skills. [[skimx://bote2008gridcole#158|p. 158]]

End-user tailorability is an issue that has already been tackled with software component technology. How- ever, services can be considered more suitable than components to build a tailorable system such as Gridcole for the following reasons, which are discussed in (Vaquero-Gonza ́lez et al., 2005) [[skimx://bote2008gridcole#158|p. 158]]

CoCoWare (Slagter, Ter Hofte, & Kruse, 2002) and Evolve (Stiemerling, Hinken, & Cremers, 1999) are two representative examples of component-based collaborative platforms that enable end-user tailoring. [[skimx://bote2008gridcole#158|p. 158]]

Other proposals in the field of component-based groupware such as Groupkit (Roseman & Greenberg, 1996) mostly focus on tailorability for designers, but not for end-users. [[skimx://bote2008gridcole#158|p. 158]]

Gridcole system offers three main functionalities to its users. First, it allows educators to provide the descrip- tion of the collaborative learning situations to be supported by the system. These descriptions are made in terms of the sequence of activities to be performed by the participants as well as of the documents and tools required to carry out such activities. Furthermore, Gridcole allows educators to manage the collaborative learning sit- uations supported by the system. Educators can thus start the realization of a situation, check the state of a situation being realized or finish the realization of a situation. Finally, Gridcole allows both learners and edu- cators to participate in the realization of collaborative learning situations supported by the system. During the realization, users can employ the documents and tools required for the situation. [[skimx://bote2008gridcole#159|p. 159]]

The description of the collaborative learning situation to be supported by the system must be provided to Gridcole by means of a unit of learning created according to the IMS-CP specification. The unit of learning must contain a formal description of the situation using the IMS-LD specification in combination with the extension proposed in (Herna ́ndez-Leo et al., 2004). Gridcole accepts two types of units of learning: complete and incomplete. Complete units of learning are those that include all the information required by the system in order to integrate the actual tools to be used during the realization of the situation. Incomplete units of learning [[skimx://bote2008gridcole#159|p. 159]]

do not include such information, but a generic description of each tool needed to support the situation accord- ing to the IMS-LRM specification. Besides, both types of units of learning may contain the documents to be employed in the situation or, alternatively, the location of such documents. [[skimx://bote2008gridcole#160|p. 160]]

Gridcole can only start the realization of collaborative learning situations described in complete units of learning. However, the system can be employed to generate complete units from incomplete ones. In this case, the system searches for the tools offered in the computational grid that best match the descriptions included in the incomplete unit of learning. The educator can choose those tools that he considers to be more suitable for the situation, among the alternatives offered. Once this is done, the system generates a complete unit including the information that enables the integration of the tools selected by the educator. The complete unit of learn- ing is then stored in the system for later utilization. [[skimx://bote2008gridcole#160|p. 160]]

When the educator decides to start the realization of a situation described in a complete unit of learning, Gridcole provides him with the list of users registered in the system and the list of roles defined in the situation. This way, the educator can specify which users will participate in the situation as well as the role(s) that each of them will play during its realization. Once this operation is completed, chosen users can join the system in order to participate in the situation. [[skimx://bote2008gridcole#160|p. 160]]

During the realization of the collaborative learning situation, Gridcole interprets the learning design included in the complete unit. This allows the system to inform each participant about the activity that he should be performing in each moment of the realization according to the defined collaboration script as well as about the tools and documents that he can use in such activity. If a participant decides to use one of the documents available for the activity, the system allows him to download it. Should he decide to employ one of the tools offered, Gridcole takes care of obtaining, installing and launching its grid service client so that he can start using the tool immediately. Besides, collaborative tools are automatically configured by the system in order to transparently put in touch users that have to collaborate in a given activity according to the collab- oration script being realized. [[skimx://bote2008gridcole#160|p. 160]]

The realization subsystem allows users to participate in the realization of situations according to the IMS- LD based collaboration scripts included in complete units of learning. The main element of this subsystem is the learning flow engine that interprets the scripts in order to determine the activities that must be performed by each participant in every moment during the realization of the situation, and also the tools and documents that they may employ in each activity. This information is provided to the user through the realization client. When the user decides to use one of the documents available for a given activity, the realization client retrieves from the flow engine the information required to automatically download it. Instead, if he decides to use a tool, the client manager automatically obtains and installs the grid service client of the tool so that the partic- ipant can start using it immediately. Should the client need a proxy credential in order to access the grid service in a secure way, it can be obtained from the credential manager. The credentials employed in the Gridcole sys- tem are stored in the credential repository. [[skimx://bote2008gridcole#161|p. 161]]

In the specific case of the learning flow engine, Coppercore (Martens & Vogten, 2005), an IMS-LD compliant learning flow engine developed by the Open University of Netherlands using EJB technologies, is being reused. [[skimx://bote2008gridcole#163|p. 163]]

The evaluation follows the ‘‘user studies’’ method, which is typically employed for the evaluation of collaborative systems (Dewan, 2001). According to this method, the evaluation was performed by means of a series of expe- riences with the proposed system that involved three different types of users: the developers, the target users, and other users not belonging to any of these groups. [[skimx://bote2008gridcole#164|p. 164]]

4.1.1. Situation I Computer Architecture is a course whose main objective is to get fourth year students to understand and to apply the main principles of computer system design and evaluation. For this reason, and according to the edu- cational motivations described in (Mart ́ınez-Mone ́s et al., 2005), a situation has been designed in which students play the role of consultants that have to make a recommendation on a computing system to a fictitious (but real- istic) customer, played by the teacher. This situation, which has been designed according to the pyramid collab- orative pattern (Johnson & Johnson, 1999), defines the sequence of activities that is outlined next: 1. Individually, study customer requirements and propose a workload model. 2. Individually, study the documentation on available machines and benchmarks, and propose an evaluation plan. [[skimx://bote2008gridcole#164|p. 164]]

3. Individually, benchmark available machines and propose a recommendation. A benchmarking tool is avail- able for this activity. 4. In pairs, discuss the workload model and propose an agreed model. A chat tool is available for this activity. 5. In pairs, discuss the evaluation plan, and propose an agreed plan. A chat tool is available for this activity. 6. In pairs, if necessary repeat experiments, or recombine results, and propose an agreed machine recommendation. A chat tool and a benchmark tool are available for this activity. [[skimx://bote2008gridcole#165|p. 165]]

4.1.2. Situation II The main goal of the Advanced Networking and Network Management course is to make third year stu- dents deepen the understanding of some concepts concerning the TCP/IP protocol stack that have been already introduced in previous courses. Within this context, a situation has been designed in which the stu- dents collaborate to study four different mechanisms of the TCP protocol (e.g. sliding window, congestion avoidance, etc.). In this case, the situation has been designed following the jigsaw collaborative pattern (John- son & Johnson, 1999). The sequence of activities included in this situation can be summarized as follows: 1. Individually, study the theoretical functioning of the assigned mechanism. 2. Individually, study the behavior of the assigned mechanism in parameter-sweep simulations of a set of scenarios selected by the teacher. A network simulator tool is available for this activity. 3. In groups of four people in which all members have previously studied the same mechanism, discuss and agree the conclusions about the behavior of the mechanism. A chat tool is available for this activity. 4. In groups of four people in which each member has studied a different mechanism, study the influence that each mechanism has in the other mechanisms in a series of parameter-sweep simulations of scenarios selected by the teacher. A chat tool and a network simulator tool are available for this activity. 5. In groups of four people in which each member has studied a different mechanism, discuss and agree the conclusions about the influences between mechanisms. A chat tool is available for this activity. [[skimx://bote2008gridcole#165|p. 165]]

4.1.3. Situation III The Telecommunications Systems course aims at getting fifth year undergraduates to learn the basics of image processing in analog and digital television systems. In the situation designed for this course, students have to identify different features of analog television signal employing a remote laboratory of electronics that includes devices such as television signal generators, oscilloscopes and vectorscopes. This situation has been designed according to the TAPPS (Think Aloud Pair Problem Solving) pattern (Barkley, Cross, & Major, 2004), and includes the following sequence of activities: 1. Individually, examine the instructions manuals of the devices included in the remote laboratory. 2. In pairs, student A uses the remote laboratory to identify the synchronization marks of television signal while explaining to student B the steps that he actually takes in order to complete the proposed exercise. Student B follows this explanation, poses questions on the issues that he does not understand and warns student A if he discovers any error. A chat tool and remote laboratory of electronics tool are available in this activity. 3. In pairs, student B uses the remote laboratory to identify the phase of chrominance signals in an image while explaining to student A the steps that he actually takes in order to complete the proposed exercise. Student A follows this explanation, poses questions on the issues that he does not understand and warns student B if he discovers any error. A chat tool and a remote laboratory of electronics tool are available in this activity. [[skimx://bote2008gridcole#165|p. 165]]

Two experiences in which real participants used Gridcole prototype have been evaluated in order to show that the proposed system can provide adequate support for the realization of a real collaborative learning sit- uation. The evaluation has been carried out following the guidelines defined by the evaluation method pro- posed in (Mart ́ınez-Mone ́ s, Dimitriadis, Rubia-Avi, Go ́ mez-Sa ́ nchez, & Fuente-Redondo, 2003). This method was chosen because of its mixed nature, which facilitates the possibility of gaining a deep understand- [[skimx://bote2008gridcole#166|p. 166]]

ing of the studied experiences, as well as its suitability for computer supported collaborative learning scenarios. [[skimx://bote2008gridcole#167|p. 167]]

In accordance with (Mart ́ınez-Mone ́s et al., 2003), the analysis of quantitative data was performed not to dem- onstrate hypothesis, but to detect general tendencies in an efficient manner, which were confirmed or discarded by the analysis of qualitative data. The main results of this analysis are described next, while full details can be found in (Bote-Lorenzo, 2005). [[skimx://bote2008gridcole#167|p. 167]]

learning design editors such as Collage (Herna ́ndez-Leo et al., 2006). This tool will be integrated with Gridcole in the near future. [[skimx://bote2008gridcole#169|p. 169]]

References Bagnasco, A., Poggi, A., & Scapolla, A. M. (2005). Computational grids and online laboratories. In Proceedings of the 1st International Conference on Advanced Technology for Enhanced Learning, Naples, Italy. Baker, M., & Lund, K. (1996). Flexibly structuring the interaction in a CSCL environment. In Proceedings of the European Conference on Artificial Intelligence in Education (EuroAIED’96), Lisbon, Portugal (pp. 401–407). Barkley, E. F., Cross, K. P., & Major, C. H. (2004). Collaborative learning techniques: a handbook for college faculty. San Francisco, CA, USA: Jossey-Bass. Berman, F., Fox, G., & Hey, A. (Eds.). (2003). Grid computing: Making the global infrastructure a reality. Chichester, UK: John Wiley & Sons. Betbeder, M. L., & Tchounikine, P. (2003). Symba, a tailorable framework to support collective activities in a learning context. In: Proceedings of the 9th International Workshop on Groupware (CRIWG 2003), Grenoble, France (pp. 90–98). Bote-Lorenzo, M.L. (2005). Gridcole: a tailorable grid service based system that supports scripted collaborative learning (in Spanish). PhD dissertation. University of Valladolid, Spain. Bote-Lorenzo, M.L., Dimitriadis, Y.A., & Go ́mez-Sa ́nchez, E. (2004a). Grid characteristics and uses: a grid definition (extended and revised version). In: Postproceedings of the 1st European Across Grids Conference (AxGrids03), Santiago de Compostela, Spain (pp. 291–298). Bote-Lorenzo, M. L., Herna ́ndez-Leo, D., Dimitriadis, Y. A., Asensio-Pe ́rez, J. I., Go ́mez-Sa ́nchez, E., Vega-Gorgojo, G., et al. (2004b). Towards reusability and tailorability in collaborative learning systems using IMS-LD and grid services. International Journal on Advanced Technology for Learning, 1(3), 129–138. Bourguin, G., & Derycke, A. (2001). Integrating the CSCL activities into virtual campuses: foundations of a new infrastructure for distributed collective activities. In Proceedings of the 1st European Conference on Computer Supported Collaborative Learning (EuroCSCL 2001), Maastricht, The Netherlands (pp. 123–130). Brezany, P., Janciak, I., Woehrer, A., & Tjoa, A. M. (2004). GridMiner: a framework for knowledge discovery on the grid - from a vision to design and implementation. In Proceedings of the 4th Cracow Grid Workshop (CGW’04), Cracow, Poland. Butchart, B., Chapman, C., & Emmerich, W. (2003). OGSA first impressions – a case study re-engineering a scientific application with the Open Grid Services Architecture. In Proceedings of UK e-Science All Hands Meeting 2003 (AHM 2003), Nottingham, UK (pp. 810– 816). Despres, C., & George, S. (1999). Computer-supported distance learning: an example in educational robotics. In Proceedings of the 9th International PEG Conference, Exeter, UK (pp. 344–353). Dewan, P. (2001). An integrated approach to designing and evaluating collaborative applications and infrastructures. Computer Supported Cooperative Work, 10(1), 75–111. Dillenbourg, P. (Ed.). (1999). Collaborative Learning: cognitive and computational approaches. Oxford, UK: Elsevier Science. Dillenbourg, P. (2002). Over-scripting CSCL: the risks of blending collaborative learning with instructional design. In P. A. Kirschner (Ed.), Three worlds of CSCL. Can we support CSCL (pp. 61–91). Heerlen, Open Universiteit Nederland. Foster, I., & Kesselman, C. (Eds.). (2004). The grid 2: Blueprint for a future computing infrastructure. San Francisco, CA, USA: Morgan Kaufman Publishers. Foster, I., Kesselman, C., & Tuecke, S. (2004). The open grid services architecture. In I. Foster & C. Kesselman (Eds.), The grid 2: Blueprint for a future computing infrastructure (2nd ed.) (pp. 215–258). San Francisco, CA, USA: Morgan Kaufman. Fox, G. (2003). Education and the enterprise with the grid. In F. Berman, G. Fox, & A. Hey (Eds.), Grid computing: Making the global infrastructure a reality (pp. 963–976). Chichester, UK: Wiley. Gamma, E., Helm, R., Johnson, R., & Vlissides, J. (1995). Design patterns: Elements of a reusable object oriented software. Reading, MA, USA: Addison-Wesley. [[skimx://bote2008gridcole#170|p. 170]]

Gillam, L., Ahmad, K., & Dear, G. (2005). Grid-enabling social scientists: the FINGRID infrastructure. In Proceedings of the 1st International Conference on e-Social Science, Manchester, UK. Global Grid Forum (GGF) (2003). Technical Specification. Available from http://www.ggf.org/documents/GFD.15.pdf. Haake, J.M., Schu ̈ mmer, T., Haake, A., Bourimi, M., & Landgraf, B. (2003). Two-level tailoring support for CSCL. Proceedings of the 9th International Workshop on Groupware (CRIWG 2003), Grenoble, France, 74-81. Herna ́ndez-Leo, D., Asensio-Pe ́rez, J.I., & Dimitriadis, Y. (2004). IMS Learning Design support for the formalization of collaborative learning patterns. Proceedings of the 4th International Conference on Advanced Learning Technologies (ICALT 2004), Joensuu, Finland, 350-354. Herna ́ndez-Leo, D., Villasclaras-Ferna ́ndez, E. D., Jorr ́ın-Abella ́n, I. M., Asensio-Pe ́rez, J. I., Dimitriadis, Y., Ruiz-Requies, I., et al. (2006). COLLAGE, a collaborative learning design editor based on patterns. Journal of Educational Technology & Society, Special Issue on Learning Design, 9(1), 58–71. IMS Global Learning Consortium (2001). Technical Specification. Available from http://www.imsglobal.org/metadata/imsmdv1p2p1/ imsmd_infov1p2p1.html. IMS Global Learning Consortium (2003a). Technical Specification. Available from http://www.imsglobal.org/learningdesign/ldv1p0/ imsld_infov1p0.html. IMS Global Learning Consortium (2003b). Technical Specification. Available from http://www.imsglobal.org/content/packaging/ cpv1p1p3/imscp_infov1p1p3.html. Jensen, N., Seipel, S., Nejdl, W., & Olbrich, S. (2003). COVASE: Collaborative visualization for constructivist learning. In Proceedings of the International Conference on Computer Support for Collaborative Learning (CSCL 2003), Bergen, Norway (pp. 249–253). Jermann, P., & Dillenbourg, P. (2003). Elaborating new arguments through a CSCL script. In M. Baker & D. Suthers (Eds.), Arguing to learn: Confronting cognitions in computer-supported collaborative learning environments (pp. 205–226). London, UK: Academic Publishers. Jermann, P., Soller, A., & Lesgold, A. (2004). Computer software support for collaborative learning. In J. W. Strijbos, P. Kirschner, & R. Martens (Eds.), What we know about CSCL in higher education (pp. 141–146). Amsterdam, The Netherlands: Kluwer. Johnson, D.W., & Johnson, R.T. (1999). Learning together and alone: Cooperative, competitive and individualistic learning. 5th ed. Needham Heights. MA, USA: Allyn and Bacon. Johnson, R. (2002). J2EE architectures. J2EE design and development. Chichester, UK: Wiley. Johnson, R. T., & Johnson, D. W. (1994). An overview of cooperative learning. In J. S. Thousand, A. Villa, & A. Nevin (Eds.), Creativity and collaborative learning: a practical guide to empowering students and teachers (pp. 31–44). Baltimore, MD, USA: Brookes Press. Johnson, S. D., Aragon, S. R., Shaik, N., & Palma-Rivas, N. (2000). Comparative analysis of learner satisfaction and learning outcomes in online and face-to-face learning environments. Journal of Interactive Learning Research, 11(1), 29–49. Kemper, E. A., Stringfield, S., & Teddlie, C. (2003). Mixed methods sampling: strategies in social science research. In A. Tashakkori & C. Teddlie (Eds.), Handbook of mixed methods in social & behavioral research (pp. 273–296). Thousand Oaks, CA, USA: Sage Publication. Koschmann, T. (1996). CSCL: Theory and practice of an emerging paradigm. Malwah, NJ, USA: Lawrence Erlbaum. Martens, H., & Vogten, H. (2005). A reference implementation of a learning design engine. In R. Koper & C. Tattersall (Eds.). A handbook on modelling and delivering networked education and training (pp. 91–108). Berlin, Germany: Springer-Verlag. Martins Ferreira, J. M., Alves, G. R. C., Costa, R., & Hine, N. (2002). Collaborative learning in a web-accesible workbench. In Proceedings of the 8th International Workshop on Groupware (CRIWG 2002), La Serena, Chile (pp. 25–34). Mart ́ınez-Mone ́s, A., Dimitriadis, Y., Rubia-Avi, B., Go ́mez-Sa ́nchez, E., & Fuente-Redondo, P. (2003). Combining qualitative evaluation and social network analysis for the study of classroom social interactions. Computers and Education, 41(4), 353–368. Mart ́ınez-Mone ́s, A., Go ́mez-Sa ́nchez, E., Dimitriadis, Y., Jorr ́ın-Abella ́n, I. M., Rubia-Avi, B., & Vega-Gorgojo, G. (2005). Multiple case studies to enhance project-based learning in a computer architecture course. IEEE Transactions on Education, 48(3), 472–481. Morch, A. (1995). Three levels of end-user tailoring: customization, integration and extension. In Proceedings of the 3rd Decennial Aarhus Conference, Aarhus, Denmark (pp. 41–45). Papazoglou, M. P., & Georgakopoulos, D. (2003). Service-oriented computing. Communications of the ACM, 46(10), 25–28. Pearlman, L., Kesselman, C., Gullapalli, S., Spencer, B.F., Futrelle, J., Ricker, K., Foster, I., Hubbard, P., & Severance, C. (2004). Distributed hybrid earthquake engineering experiments: experiences with a ground-shaking grid application. In Proceedings of the 13th IEEE International Symposium on High Performance Distributed Computing (HPDC 2004), Honolulu, HA, USA (pp. 14–23). Peltier, S., Martone, M. E., Lamont, S., Lin, A., Lee, D., Molina, T., et al. (2003). The Telescience portal for advanced tomography applications. Journal of Parallel and Distributed Computing, 63(5), 539–550. PostgreSQL Global Development Group (2005). PostgreSQL v8.0. Available from http://www.postgresql.org. Ramamurthy, M. K., Wilhelmson, R. B., Pea, R. D., Louis, M., & Edelson, D. C. (1995). CoVis: A national science education collaboratory. In Proceedings of the American Meteorological Society 4th Conference on Education, Dallas, TX, USA. Reload Project (2005). Reusable eLearning Object Authoring & Delivery (RELOAD) editor v2.0. Available from http://www.reload.ac.uk. Roman, E., Ambler, S. W., & Jewel, T. (2002). Mastering enterprise JavaBeans (2nd ed.). New York, NY, USA: John Willey & Sons. Roseman, M., & Greenberg, S. (1996). Building real-time groupware with Groupkit, a groupware toolkit. ACM Transactions on Computer-Human Interaction, 3(1), 66–106. Sinnott, R. O., Atkinson, M., Bayer, M., Berry, D., Dominiczak, A., Ferrier, M., et al. (2004). Grid services supporting the usage of secure federated, distributed biomedical data. Proceedings of UK e-Science All Hands Meeting, Nottingham, UK, 135–138. Slagter, Ter Hofte, & Kruse (2002). The CoCoWare .Net architecture 2.0. Technical Report TI/RS/2002/123, Telematica Instituut, [[skimx://bote2008gridcole#171|p. 171]]

Smarr, L. (2004). Grids in context. In I. Foster & C. Kesselman (Eds.), The Grid 2: Blueprint for a future computing infrastructure (2nd ed.). San Francisco, CA, USA: Morgan Kaufman Publishers. Stiemerling, O., Hinken, R., & Cremers, A. B. (1999). The EVOLVE tailoring platform: supporting the evolution of component-based groupware. In Proceedings of the 3rd International Enterprise Distributed Object Computing Conference (EDOC’99), Mannheim, Germany (pp. 106–115). Sun Microsystems (2001a). Technical Specification JSR-56. Available from http://www.jcp.org/en/jsr/detail?id=56. Sun Microsystems (2001b). Technical Specification JSR-54. Available from http://www.sun.com/products/jdbc. Sun Microsystems (2003a). Technical Specification JSR-154. Available from http://www.jcp.org/en/jsr/detail?id=154. Sun Microsystems (2003b). Technical Specification JSR-152. Available from http://jcp.org/en/jsr/detail?id=152. Sun Microsystems (2004). Java Web Start version 1.5.0. Available from http://java.sun.com/j2se/1.5.0/docs/guide/javaws/index.html. Szyperski, C. (2003). Component technology – what, where and how? In Proceedings of the 25th International Conference on Software Engineering (ICSE’03) (pp. 684–693). Vantroys, T., & Peter, Y. (2003). COW, a flexible platform for the enactment of learning scenarios. In Proceedings of the 9th International Workshop on Groupware (CRIWG 2003), Grenoble, France (pp. 168–182). Vaquero-Gonza ́lez, L. M., Herna ́ndez-Leo, D., Simmross-Wattenberg, F., Bote-Lorenzo, M. L., Asensio-Pe ́rez, J. I., Dimitriadis, Y., Go ́mez-Sa ́nchez, E., & Vega-Gorgojo, G. (2005). The opportunity of grid services for CSCL application development. In Proceedings of the 13th Euromicro Conference on Parallel, Distributed and Network-based Processing (PDP’05), Lugano, Switzerland (pp. 4–11). Vega-Gorgojo, G., Bote-Lorenzo, M. L., Go ́mez-Sa ́nchez, E., Asensio-Pe ́rez, J. I., Dimitriadis, Y., & Jorr ́ın-Abella ́n, I. M. (2006a). Ontoolcole: an ontology for the semantic search of CSCL services. In Proceedings of the 12th International Workshop on Groupware (CRIWG 2006), Medina del Campo, Spain (pp. 310–325). Vega-Gorgojo, G., Bote-Lorenzo, M. L., Go ́mez-Sa ́nchez, E., Dimitriadis, Y. A., & Asensio-Pe ́rez, J. I. (2006b). A semantic approach to discovering learning services in grid-based collaborative systems. Future Generation Computer Systems, 22(6), 709–719. Vialle, S., De Vivo, A., & Sabatier, F. (2005). A grid architecture for comfortable robot control. In Proceedings of the European Grid Conference in Advances in Grid Computing (EGC 2005), Amsterdam, The Netherlands (pp. 344–353). Wozniak, J. M., Striegel, A., Salyers, D., & Izaguirre, J. A. (2005). GIPSE: streamlining the management of simulation on the grid. In Proceedings of the 38th Annual Simulation Symposium (ANSS’05), San Diego, CA, USA (pp. 130–137). [[skimx://bote2008gridcole#172|p. 172]]

