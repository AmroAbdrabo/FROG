h2. Highlights

Many took the notion of “children, computers and powerful ideas” (to quote the subti- tle of his book) as a rather simplistic ver- sion of Piagetian discovery learning with the Logo programming language when, in fact, the opposite applied. [[skimx://kafai2006constructionism#1|p. 1]]

Construction- ism is not constructivism, as Piaget never intended his theory of knowledge develop- ment to be a theory of learning and teaching; nor is constructionist learning simply dis- covery learning and thus opposed to any forms of instruction; and last, in construc- tionism, people and not computers are seen as the driving force for educational change. [[skimx://kafai2006constructionism#1|p. 1]]

Papert’s constructionism views learning as building relationships between old and new knowledge, in interactions with oth- ers, while creating artifacts of social rele- vance. Thus any chapter on constructionism needs to begin with a clarification of three issues – constructivism, instructionism, and technocentrism – before delving any fur- ther into the theoretical and pedagogical particulars. [[skimx://kafai2006constructionism#1|p. 1]]

[C]onstructionism – the N Word as opposed to the V word – shares construc- tivism’s connotation to learning as build- ing knowledge structures irrespective of the circumstances of learning. It then adds the idea that this happens especially felic- itously in a context where the learner is consciously engaged in constructing a pub- lic entity whether it’s a sand castle on the beach or a theory of the universe. (Papert, 1991, p.1) [[skimx://kafai2006constructionism#2|p. 2]]

Constructionism always has acknowledged its allegiance to Piagetian theory but it is not identical to it. Where constructivism places a primacy on the development of individual and isolated knowledge structures, construc- tionism focuses on the connected nature of knowledge with its personal and social dimensions. [[skimx://kafai2006constructionism#2|p. 2]]

The opposition of constructionism to instructionism often aligns constructionist learning with discovery learning – as learning without curriculum in which the child dis- covers principles or ideas by him or herself. A common myth associated with construc- tionism is the idea that all instruction is bad. A closer reading of Papert’s original writings clarifies this issue: [[skimx://kafai2006constructionism#2|p. 2]]

. . . but teaching without curriculum does not mean spontaneous, free-form class- rooms or simply ‘leaving the child alone’. It means supporting children as they build their own intellectual structures with mate- rials drawn from the surrounding culture. In this model, educational intervention means changing the culture, planning new constructive elements in it and eliminating noxious ones. (p. 31, 1980/1993) [[skimx://kafai2006constructionism#2|p. 2]]

In any historical account of construction- ism the programming language Logo is the “evocative object” – to use a phrase coined by Sherry Turkle (Turkle, 1995) [[skimx://kafai2006constructionism#3|p. 3]]

Logo was not the first programming language used by chil- dren. Basic was prominent in many schools and indeed there was considerable debate about which programming language would be best for schools. But in contrast to Basic, learning with Logo promised to offer more than just learning to program: it included learning about your own thinking and learn- ing, and learning mathematics and science in conceptually new ways. These additions made Logo unlike any other programming language. [[skimx://kafai2006constructionism#3|p. 3]]

Consider the following commands, in which the turtle moves one step forward, then moves one degree to the right, and then repeats this procedure 360 times: REPEAT 360 [FORWARD 1 RIGHT 1]. With the pen down, these commands draw a circle on the screen. A child, using his own body, pretend- ing to be the turtle, could execute every sin- gle one of these steps. Papert attributed great importance to this feature, which he called syntonic learning, because it allowed children to identify with the computational object in multiple ways: [[skimx://kafai2006constructionism#3|p. 3]]

For example, the Turtle circle is body syn- tonic in that the circle is firmly related to children’s sense and knowledge about their own bodies. Or it is ego syntonic in that it is coherent with children’s sense of themselves as people with intentions, goals, desires, likes and dislikes. . . . One can also [[skimx://kafai2006constructionism#3|p. 3]]

So much has been written about the success or failure of Logo in schools that it’s worth providing some background to the debate. In an excel- lent analysis of the historical context in the United States and in Europe, Richard Noss and Celia Hoyles (1996) identify some of the larger cultural forces at play that led crit- ics to ask certain questions about Logo and not others. In many schools, questions about Logo’s learning benefits focused exclusively on the transfer of problem solving skills and less on the benefits of learning mathemat- ics and pedagogical reform ideas. A series of smaller studies conducted by Roy Pea and Midian Kurland (1984) is often referenced as the sole evidence that learning Logo pro- gramming did not produce any transferable effects. These studies had several method- ological issues; for example, neglecting to consider the length of time spent learning programming and the type of programs cre- ated. These features have now been recog- nized as instrumental in designing successful programming instruction (Palumbo, 1990) and I discuss them in more detail in a later section on software design for learning. A further problem has been that teachers often adopt Logo but not the pedagogical innova- tions for learning mathematics and science; and even if they did, many did not receive widespread institutional support in their schools for doing so (Papert, 1991, 1997). Many institutional forces shaped the use of Logo in schools, and the result was often that its constructionist ideas about learning and teaching were the least acknowledged. [[skimx://kafai2006constructionism#4|p. 4]]

see it as cultural syntonic in that when drawing the circle, the turtle connects the idea of an angle to the idea of naviga- tion which is closely rooted in children’s extracurricular experiences. (1980/1993, pp. 63–68) [[skimx://kafai2006constructionism#4|p. 4]]

A third and equally important feature of Logo programming is the idea of chil- dren learning about their own thinking and learning, called reflection or metacog- nition. Papert claimed that in learning pro- gramming, children learn to articulate pro- cedures, recognize repetition, and “debug” their own thinking when programs don’t run as expected: “But thinking about learning by analogy with developing a program is a powerful and accessible way to get started on becoming more articulate about one’s debugging strategies and more deliberate about improving them” (p. 23, 1980/1993). Computer programs can become “objects- to-think-with” that help children reflect on their performance in ways similar to experi- enced learners. [[skimx://kafai2006constructionism#4|p. 4]]

A key aspect in knowledge construction is appropriation – how learners make knowledge their own and begin to identify with it. These appropria- tions go beyond the intellectual and include emotional values. According to Papert, physical objects play a central role in this knowledge construc- tion process. He coined the term “objects-to- think-with” as an illustration of how objects in the physical and digital world (such as programs, robots, and games) can become objects in the mind that help to construct, examine, and revise connections between old and new knowledge. “Objects-to-think- with” such as the Logo turtle are particu- larly effective at supporting appropriation, because they facilitate the child’s identifica- tion with the object, or syntonic learning. Constructionism further differs from the Piagetian model in equally valuing the con- crete and the abstract. In Piaget’s stage the- ory, formal abstraction is seen as the ultimate goal of all knowledge construction, with concrete thinking always associated with younger, less advanced children. Turkle and Papert (1990) instead argue that concrete thought could be just as advanced as abstract thought. The sciences in general, but the computer culture in particular, have tended to value abstract thinking. But in studying programmers, Turkle and Papert discovered that the officially promoted top-down or planning approach was not always superior to a more improvised, more bricoleur-like approach. The bricoleur style is not a step- ping stone towards more advanced forms of knowledge construction, but rather is a qual- itatively different way of organizing one’s planning and problem solving. In sum, knowledge construction is “the deliberate part of learning [which] consists of making connections between mental enti- ties that already exist; new mental entities seem to come into existence in more subtle ways that escape conscious control. . . . This suggests a strategy to facilitate learning by improving the connectivity in the learning environment, by actions on cultures rather than on individuals” (p. 105, Papert, 1993). [[skimx://kafai2006constructionism#5|p. 5]]

The importance of learning cultures was informed by Papert’s observations of chil- dren’s difficulties in understanding and learning mathematics. Piagetian studies indi- cated that all young children develop their first fundamental mathematical concepts, but many struggle in later school years. In his book Mindstorms, Papert offered Brazil- ian samba schools as one possible image for a learning culture: [[skimx://kafai2006constructionism#5|p. 5]]

[t]hese are not schools as we know them; they are social clubs with memberships that may range from a few hundred to many thousands. Each club owns a build- ing, a place for dancing and getting together. Members of a samba school go there most weekend evenings to dance, to drink, and to meet their friends. During the year each samba school chooses its theme for the next carnival, the stars are selected, the lyrics are written and rewritten, and the dance is choreographed and practiced. Members of the school range in age from children to grandparents and in ability from novice to professional. But they dance together and as they dance everyone is learning and teaching as well as dancing. Even the stars are there to learn their difficult parts. (1980/1993, p. 178) [[skimx://kafai2006constructionism#5|p. 5]]

Papert’s idea of a learning culture has been developed in several directions, from neighborhood centers to virtual worlds. The Computer Clubhouse (Resnick, Rusk, & Cooke, 1998), for instance, is an outside of school learning culture that is located in after school programs and community centers. In these clubhouses, youth convene at their own volition and learn to work with cre- ative software applications to produce digital graphics, music, and videos. Unlike schools, the activities in the clubhouse do not follow a set curriculum, and members are responsi- ble for introducing each other to new activ- ities, with the support of coordinators and mentors. Other examples include multi-user [[skimx://kafai2006constructionism#5|p. 5]]

online environments in which community members contribute to the design of various elements of the online world by populating it with objects and houses, such as Bruck- man’s MOOSE Crossing (this volume). [[skimx://kafai2006constructionism#6|p. 6]]

Microworlds have been described as “a computer-based interactive learning envi- ronment where the prerequisites are built into the system and where learners can become the active, constructing architects of their own learning” (Papert, 1980/1993, p. 122). A classic example is the Dynatur- tle, a physics environment in which learn- ers can experience Newtonian physics, and also historically important alternatives like Aristotelian physics. Movements and states of turtles can be preprogrammed to respond to certain laws of motion that can be manipulated by the learner. No explicit instruction about the laws is provided in microworlds, unlike in computer-based tutorials or computer-assisted instruction. Learners induce these laws by interacting with a turtle preprogrammed to behave as an object in a frictionless universe. Further developments have expanded Logo into massively parallel microworlds on the computer; instead of one turtle, now hundreds or even thousands can interact. In StarLogo (Resnick, 1991), a circle would no longer be drawn by one turtle, but instead by dozens of turtles following two simple rules: (1) to keep a specific distance from each other and (2) to repel the group as a whole and move away from other turtles (see Figure 3 .2 ). This version of Logo connects to another emergent discipline, that of complex sys- tem design, which is interested in how complex behavior patterns emerge from interactions between many simple objects. Many natural and human phenomena can be described this way, as Mitchel Resnick argues in his book Turtles, Termites, and Traffic Jams (1994). Working with StarLogo offers learn- ers the opportunity to explore the proba- bilistic patterns in complex interactions in the same way as the turtle in Logo offers learners an opportunity to connect to formal mathematical objects in new ways (Resnick & Wilensky, 1998). StarLogo can provide accessible objects-to-think-with for people to examine emergence in complex systems. Microworlds are the prototypical con- structionist learning environment for the fol- lowing reasons. First, scientific and math- ematical microworlds offer access to ideas and phenomena – such as the friction- less world – that students may not eas- ily encounter in their regular textbooks or classroom lessons. Second, they provide environments that challenge naı ̈ve under- standings by providing the learner with feed- back on their interactions and manipula- tions. Third, these interactions with the microworld allow the learner to develop personal knowledge that can provide the foundation for more formalized interac- tions. Last, microworlds create a type [[skimx://kafai2006constructionism#6|p. 6]]

What stands out in these examples of the samba school, Computer Clubhouse, and MOOSE Crossing is the rich set of inter- actions between different community mem- bers. These instructional interactions are not formulated in the one-directional pathway of traditional classrooms; rather, they draw on apprenticeship models (see also Collins, this volume) in which all members of the community of practice contribute to the larger enterprise (Lave & Wenger, 1991). Although sociocultural researchers empha- size the social dynamics of learning cultures, constructionists focus on how the social con- text provides opportunities for making con- nections to what is being learned. [[skimx://kafai2006constructionism#6|p. 6]]

Microworlds and construction kits have expanded on different aspects of Logo to promote learning in mathematics and sci- ence. [[skimx://kafai2006constructionism#6|p. 6]]

of learning environment in which talk- ing about mathematics (or science) is part of the classroom peer culture. The turtle world in Logo is “a ‘place’, ‘a province of Mathland’ where certain kinds of mathe- matical thinking could hatch and grow with ease. The microworld was an incubator” (Papert, 1980/1993, p. 125). A wide range of microworlds in mathematics and science has been developed since then, and not all of them are Logo-based environments (for more examples of microworlds and further developments see diSessa, 2 0 0 0 ; Edwards, 1998; Noss & Hoyles, 1996, this volume). [[skimx://kafai2006constructionism#7|p. 7]]

The Mindstorms robotics competitions, now a part of many high school and college classrooms, specify a goal for the robot, and then give teams a limited amount of time and resources to build a robot out of LEGOTM bricks with motors and sensors; at the end of the time period, the teams test their designs in a competition. [[skimx://kafai2006constructionism#7|p. 7]]

A further development moves the LEGOTM /Logo brick concept into new territory by taking traditional toys such as balls and beads and providing them with computational enhancements (Resnick, 1998). Adding sensors and feedback mech- anism to these toys provides them with different interaction possibilities. Providing programmable interfaces lets children not just play with but also design these toys. Another direction is the computational crafts development, which takes traditional craft activities such as origami and uses the computer for the design of materials that can be printed on paper and used for play (Eisenberg, 2 0 0 3 ). [[skimx://kafai2006constructionism#7|p. 7]]

A more extensive collection of exam- ples and further theoretical papers can be found in two books published by mem- bers of the group, Constructionism (Harel & Papert, 1991) and Constructionism in Practice (Kafai & Resnick, 1996). [[skimx://kafai2006constructionism#8|p. 8]]

The Instructional Software Design Project (hereafter: ISDP; Harel, 1990; Harel & Papert, 1991) provides an example of how students can engage in these processes as they design instructional software to teach fractions to younger students in their schools – a topic that they were learn- ing about in mathematics class. Classroom practices included students writing in note- books about their software and instruc- tional designs, discussing fraction represen- tations in class, inviting prospective users for feedback sessions, and conducting software review sessions guided by the teacher. [[skimx://kafai2006constructionism#8|p. 8]]

The curricular model of ISDP responded to several of the criticisms of previous Logo research (Palumbo, 1990). First, it situated the daily programming activities in the class- room rather than in a distant computer lab- oratory visited only once a week. Second, it integrated the learning of programming with other subject matter such as the learning of fractions, rather than keeping programming isolated from the rest of curriculum. Finally, students were asked to create a meaning- ful artifact, such as an instructional piece of software to teach younger students in their school, rather than to produce small pieces of program code with no authentic purpose. [[skimx://kafai2006constructionism#8|p. 8]]

The learning sciences often build on motiva- tion in their project-based approaches (see Blumenfeld, Kemplar, & Krajcik, this vol- ume) but they do not address “knowledge as desire” as Hans Furth (1987) once articulated in his provocative essay integrating Piagetian and Freudian perspectives to combine cog- nitive and emotional aspects of learning. [[skimx://kafai2006constructionism#10|p. 10]]

Eisenberg, M. (2003). Mindstuff: Educational technology beyond the computer. Convergence, 4, 45–76. [[skimx://kafai2006constructionism#11|p. 11]]

Furth, H. G. (1987). Knowledge as desire: An essay on Freud and Piaget. New York: Columbia Uni- versity Press. [[skimx://kafai2006constructionism#11|p. 11]]

