h2. Highlights

The core idea of our solution MuViChat (multiple-visualization chat) is to support multiple visualizations of referenced chat transcripts in which users can choose their preferred view. The multiple visualizations offer different possibilities to follow and understand a communication and thereby diminish chat confusion which often occurs in standard chat systems. By enabling the recording and replaying of chat discussions and an extensible modular architecture we are supporting evaluation and further integration of advanced visualization concepts. [[skimx://holmer2009diminishing#1|p. 1]]

there are several studies that deal with the linguistical particularities of chat communication and the special role of chat communication in the field between speech and writing (cf. [Garcia and Jacobs, [[skimx://holmer2009diminishing#1|p. 1]]

1999], [Werry, 1996]). Chat systems are used as a single application or in combination with other tools in order to support more complex cooperation processes [Kuo et al., 2001] [Geyer et al., 2008]. [[skimx://holmer2009diminishing#2|p. 2]]

[Smith et al., 2000] identify five major problems for communication via chat systems: (P1) Lack of links between people and what they say (P2) No visibility of listening-in-progress (P3) Lack of visibility of turns-in-progress (P4) Lack of control over turn positioning (co-text loss) (P5) Lack of useful recordings and social context [[skimx://holmer2009diminishing#2|p. 2]]

Co-text loss is often also considered as “intention confusion” [Vronay et al., 1999] when the recipient of a chat message is unclear or as “thread confusion” when it is unclear to which conversation thread a message belongs. Herring [Herring, 1999] considers co-text loss as “interactional coherence” while Pimentel et al. also call it “chat confusion” [Fuks et al., 2006]. All agree that co-text loss occurs when it is not possible to identify the message to which another refers. A chat system should therefore help users to identify the messages which belong together and thereby allow users to follow the conversation without co-text loss. For that purpose, users must be able to reference another chat message when posting a new chat message. This leads to the following requirement: (R1) A chat system has to support users to reference a chat message when posting a new chat message. [[skimx://holmer2009diminishing#4|p. 4]]

The chat messages and the references between chat messages have to be visualized so that users can easily identify the messages which belong together. The visualization has the main goal to reduce to probability of co-text loss. [[skimx://holmer2009diminishing#4|p. 4]]

Users should be able to choose between different visualization forms so that they can select the visualization form which suits them best in a certain context (discussing with one person vs. in a big group or arguing vs. brainstorming). This requirement is supported by a study who found that users seemed to like the traditional chat interface more than the more efficient threaded chat interface [Smith et al., 2000]. Users liked to review the discussion in the threaded visualization, but were more convenient with the linear interface while chatting. [[skimx://holmer2009diminishing#4|p. 4]]

ThreadedChat [Smith et al., 2000] is an experimental version of a tree-based chat tool, which was used in a small group decision task with 3-4 people for research purposes. HyperDialog [Pimentel et al., 2003, Fuks et al., 2006] was also developed for research purposes and was used in groups up to eleven people. ThreadChat [Holmer and Wessner, 2004] was part of learning environment and intended to be used for small groups only. All of these tool provide referencing functionality and visualize the chat transcript as an indented tree. New contributions are integrated into the tree structure and can appear in different areas of the screen especially when participants are discussing in parallel threads. The structure is clear and the co-text of a message is easily identifiable but in the process of communication some problems are likely to occur: if a message is not referenced by accident, it will be sorted into a new thread and messages can be missed because new messages appear in areas which are not visible on the screen. Parallel threads are shown as two indented lists which results in an increasing gap between the messages. This visualization needs more screen space and makes it difficult to follow more than one thread at a time. In addition, it is difficult to identify messages, which are produced at the same time, because they may appear at totally different parts even if they belong to the same thread. [[skimx://holmer2009diminishing#5|p. 5]]

These problems are tackled in systems like KOLUMBUS [Holmer et al., 2006] and ConcertChat [Mühlpfordt and Wessner, 2005] by showing the transcript in linear order but providing a reference indicator at each message which shows a pointer to the co-text when selected. Thereby it is clear where new messages will appear and how the co-text of a message could be inferred. The drawback of these approaches is that they do not provide means for getting a visual overview of the discussion and its structure. It is awkward to find out how many parallel threads exist or how many branches are in a thread. The system factChat [Harnoncourt et al., 2005] allows users to put the messages on a two-dimensional surface in proximity to their co-text. In addition it is possible to create references to messages which are not visible anymore on the screen (older messages fade out and seem to disappear in the background). Although is possible to review the transcript by using a timeline it is not possible to get a visual representation of the entire structure. [[skimx://holmer2009diminishing#5|p. 5]]

MuViChat is based on XMPP and therefore can be used with huge variety of different chat servers already supporting this standard. [[skimx://holmer2009diminishing#6|p. 6]]

At the content level, a chat message can refer to none previous messages, exactly one, or even multiple ones. [[skimx://holmer2009diminishing#6|p. 6]]

ConcertChat [Mühlpfordt and Wessner, 2005] is a chat system which allows users to refer to multiple messages but up to now there are no reported experiences if and how users used this feature. Like other chat systems that offer referencing functionality [Smith et al., 2000, Holmer and Wessner, 2004, Holmer etal., 2006, Harnoncourt etal., 2005], we support in MuViChat references between two different chat messages only. [[skimx://holmer2009diminishing#6|p. 6]]

Apart from the number of messages which can be referenced, it is also important to decide whether users can post new messages without referencing another chat message. The experiences with the chat system HyperDialog show [Pimentel et al., 2003, Fuks et al., 2006] that especially missing and wrong references are the reason for not being able to overcome the co-text loss by referencing functionality. Additionally, it confines the conversation possibilities when forcing users to reference other chat messages. Experiences with the chat system KOLUMBUS [Holmer et al., 2006] have shown that referencing is used if the message cannot be placed directly after the referred message. Users are willing to use the functionality if the value is directly visible. In most of our provided visualizations the benefit of referencing is very clear and thereby should lead to increased usage of the referencing functionality. Due to this, we do not force users in MuViChat to reference another chat message. Instead, we allow users to reference a chat message before or while creating a new chat message by selecting the referenced message from the displayed chat messages. [[skimx://holmer2009diminishing#6|p. 6]]

We decided not to implement a fixed set of alternatives but to provide a framework for developing and integrating visualizations into MuViChat. [[skimx://holmer2009diminishing#6|p. 6]]

The following list summarizes our current visualization alternatives: 1. Classical visualization 2. List view with highlighting 3. Simple tree view 4. Tree view with highlighting time by fading colours 5. Tree view with highlighting time by layout 6. Sequential tree view [[skimx://holmer2009diminishing#7|p. 7]]

Other visualization alternatives are could be e.g. mindmap-like structures or visualizations that make use of three dimensions. But in the beginning we concentrate on the classical forms of message and thread presentation modes in order to investigate their usefulness and to be able to test them against each other. In the following section, we will describe the different visualization forms in more detail. [[skimx://holmer2009diminishing#7|p. 7]]

4.2.1 Classical visualization Our classical visualization alternative corresponds to the visualization of all major chat clients in which chat messages are displayed in a chronologically ordered list. We choose to integrate this variant for future experiments and evaluation because this variant allows us to compare the new forms of visualization with the standard case. Nevertheless, users can configure the font size, the font colour, and the background colour. For group awareness purposes, we integrated a USER LIST [Schümmer and Lukosch, 2007] which list the users who are currently participating in the chat. This USER LIST is available in all visualization forms (cf. Figure 1). [[skimx://holmer2009diminishing#7|p. 7]]

4.2.2 List view with highlighting The list view with highlighting represents a first variant of the classical view. Here, chat messages are displayed in a list and are chronologically ordered. The newest chat message is highlighted in bold font. If this message references another message, this message is displayed in bold font as well. If this message references another one, this also highlighted etc. By this all referenced messages are highlighted on a path from the most actual message to the root message, Figure 1 illustrates this visualization form. The list view with highlighting is a modified visualization form of the reference indicator approach in KOLUMBUS [Holmer etal., 2006] and ConcertChat [Mühlpfordt and Wessner, 2005]. However, compared to these systems MuViChat highlights the whole path instead of the first direct reference only. [[skimx://holmer2009diminishing#7|p. 7]]

4.2.3 Tree-based visualizations Apart from the two textual visualization alternatives our chat systems offers four different tree-based visualizations. We have tried to resolve the disadvantages of current tree views. For that purpose, all of our tree-based visualizations have in common that • chat messages are shown as coloured rectangles, • references are shown as lines between these rectangles, • each user is represented by a different colour, • chat messages can be selected by clicking on them with the left mouse button, • selected chat messages are highlighted, and • the size of the chat window can be changed arbitrarily. Users can choose whether the view is automatically focussed on the most recent chat message. As the tree visualizations require more visualization space than the list- based alternatives, we included a bird’s view which shows the complete chat conversation and highlights the part that is currently shown in the chat window. Simple tree view The simple tree view ignores the time factor and simply orders the chat messages which reference each other in a tree (cf. Figure 2). This visualization has compared to typical indented trees some advantages. The direction of the tree can be rotated in four ways (left-right, right-left, top-down, bottom-up), whereas especially the top-down view has the advantage against the typical left-right view of being more chat-like than newsgroup-like. In most chat systems, new messages appear at the bottom of the screen and users expect this to happen in other visualizations, too. Most other tree- [[skimx://holmer2009diminishing#8|p. 8]]

view chat-systems (e.g. [Smith et al., 2000] [Pimentel et al., 2003]) also provide single line text only, which results sometimes in messages, which have to be horizontally scrolled in order to read them. With the configurable multi-line text each message could be read in a glance which supports reading and getting a quicker overview. [[skimx://holmer2009diminishing#9|p. 9]]

Tree view with highlighting time by fading colours This visualization alternative considers the time at which a message was created by fading the colour of the rectangle for older messages while new messages are displayed using a bright colour (cf. Figure 3). With this feature we address the problem of missing the newest messages especially if they occur in different parts of the screen. It is configurable how long it takes for the colour to fade out, so the user can set his according to his information needs. One drawback of this view is that older messages all have the same colour and it is more difficult to identify older messages from a specific author. Thereby it is most useful for the observation of active chats and replays but not for scanning the whole transcript as a document. [[skimx://holmer2009diminishing#9|p. 9]]

Smith et al., 2000 mentioned as part of their future work, that temporal order can also be a dimension of conversation which could be used for visualization. Our variant increases the distance between two messages the more time has passed between them. In this visualization alternative, the y-axis corresponds to the time (cf. Figure 4). This view is especially useful to identify nearly simultaneous messages as well as pauses in the communication flow. In Figure 4 is a relatively long break in the middle of the conversation followed by a burst of activity and some nearly simultaneous messages. In larger conversations this can help latecomers or evaluators to identify the flow of conversation and to get an insight in the dynamics of the ongoing discourse. [[skimx://holmer2009diminishing#10|p. 10]]

Sequential tree view 3149 ￼When linearly mapping the time to the y-axis, a lot of visualization space can be wasted if there are long breaks (minutes to hours) in the communication. On the other hand, if messages are produced by many users at the same time, the distance between them is very small and visualization could be too dense. This effect can be seen in Figure 4 by the gap between the messages in the middle and very small distance between the messages at the bottom. The sequential tree view which has been used effectively for reading and analyzing chat logs [Holmer, 2008] considers this observation and uses the y-axis to visualize the order of the messages. The distance between two messages can be configured by the user (cf. Figure 5). [[skimx://holmer2009diminishing#11|p. 11]]

This visualization tries to satisfy the combination of needs for getting a quick impression of the structure, representing aspects of the chronological order and provide a readable and compact representation. [[skimx://holmer2009diminishing#12|p. 12]]

To reconsider chat conversations, users are able to store chat conservations in the XML-based format TreeML1. Thus, a conversation stored by our chat system can be read by users and as TreeML is based on XML with a publicly available DTD it is also simple to implement import filters for other formats. Once a conversation has been stored in this format, it can be imported via our chat system and replayed. Thereby, we implement the REPLAY pattern [Schümmer and Lukosch, 2007]. [[skimx://holmer2009diminishing#13|p. 13]]

ChatLine [Holmer, 2008] is able to interpret the data structures and apply the discourse structure analysis method in order to compute measures like thread structures, multitasking behavior, participation rates and social network structures. Thereby, chat discussions can be evaluated with quantitative criteria. Such an evaluation can give interesting hints about differences between chat conversations. A group can use this to understand their communication behavior and look for improvements, e.g. is the communication equally distributed or are all participants responding to each other? The other way around chatLine can convert chat conversations from other chat tools into TreeML. Such transformed conversations can then be replayed within MuViChat. Even when references are not present, users can get an impression how [[skimx://holmer2009diminishing#13|p. 13]]

1 TreeML is an XML-based format that can be used to store tree-based structures. It was developed for the IEEE InfoVis Contest 2003. The document type definition is available at: http://www.nomencurator.org/InfoVis2003/download/treeml.dtd [[skimx://holmer2009diminishing#13|p. 13]]

their conversation would looked like when using MuViChat. Again, this can lead to important insights about the visualization demands of different groups and improve the understanding of a chat conversatio [[skimx://holmer2009diminishing#14|p. 14]]

For the pilot study based on online discussions, we conducted informal experiments with students at the university campus in Hagenberg, Austria. By using MuViChat in 90-minute discussions with 18 active participants we could show that the concept worked for this group size (see Figure 7). The referencing concept was immediately understood and used correctly. Participants tried the different visualizations and developed their own strategy to use them for their purpose. We observed the following user behaviours: In order to browse the discussion, participants used the simple tree visualization (cf. Figure 2) or the tree variant shown in Figure 3a. In this visualization the distance between references is the smallest and therefore the understanding of the conversation is simplified the most. For participating actively in the conversation and following ongoing threads the participants used the sequential tree (cf. Figure 5). Current messages appear at the bottom of the screen and make it easier to follow the discussion in one thread. These preliminary results show that participants embraced the different visualizations and used them for their own purposes. They could also imagine using the tool for learning and working e.g. structured brainstorming sessions with given topics, language learning, planning meetings and distribution of tasks. In order to create a discussion protocol they demanded an “export to mindmap” feature which should be able to export selected trees. [[skimx://holmer2009diminishing#14|p. 14]]

Workspace awareness will give users an understanding of their activities as well other users’ activities in their current work context [Dourish and Bellotti, 1992, Gutwin et al., 1996]. In the current version, MuViChat only offers a USER LIST [Schümmer and Lukosch, 2007] for providing awareness. Experts suggested offering more functionality for workspace awareness. They suggested making users aware of what the typing activity of other users before their messages are posted into the chat transcript (cf. P3). Regarding the graphical structure of MuviChat we plan to integrate an ACTIVITY INDICATOR [Schümmer and Lukosch, 2007] which appears when a user is referencing a message and thereby shows that there will be a reply to that message in the future. [[skimx://holmer2009diminishing#16|p. 16]]

In the current implementation messages which were not referenced by accident could not be linked afterwards. In some cases, the experts would have liked to include such links afterwards to better structure the discussion and to explicitly address co-text loss once it has occurred. In order to give better support for structuring this feature, we will implement this feature in a future release of MuViChat. [[skimx://holmer2009diminishing#16|p. 16]]

Up to now the spatial layout of threads is the same for all participants although threads in which a user is actively participating should be more important than other threads. The experts recommended bringing active threads to the centre of the screen and let older threads disappear into the [[skimx://holmer2009diminishing#16|p. 16]]

background. Such kind of personalized views could help to stay focused on the subjective most interesting parts of a chat discussion. Additionally, we intend to integrate a CHANGE INDICATOR [Schümmer and Lukosch, 2007] which highlights the most recent changes within the bird view of the tree visualizations. Such a CHANGE INDICATOR will also improve the group awareness. [[skimx://holmer2009diminishing#17|p. 17]]

When chat contributions get rather long, the experts experienced difficulties in keeping the overview when using a tree view. This effect was mainly caused by the nodes which got to big when displaying the whole text of the contribution. Some experts suggested using a fixed size for each node in the tree and only displaying the full text on a mouse hover. Another suggestion was to display the classical view in parallel to the tree view. Thereby, the tree view would show the references whereas the classical view could be used to read and follow the discussion. [[skimx://holmer2009diminishing#17|p. 17]]

We will use eye-tracking systems and screen recording software in order to analyze crucial aspects of the different visualization alternatives and other interface features. In which way users are scanning the screen and look for the co-text of messages? How long does it take and what are the actions of people when the co- text is difficult to find? How do people read complex graphical thread structures and which strategies do they use in order to follow multiple discussions? Which role do the enhanced awareness functions play when people are actively engaged in conversations? In order to answer these questions we will carry out single-user studies with the replay functionality as well as task-based group experiments. [[skimx://holmer2009diminishing#17|p. 17]]

[Dourish and Bellotti, 1992] Dourish, P. and Bellotti, V. (1992). Awareness and coordination in shared workspaces. pages 107–114, Toronto, Canada. [Fuks et al., 2006] Fuks, H., Pimentel, M., and de Lucena, C. J. P. (2006). R-u-typing-2-me? evolving a chat tool to increase understanding in learning activities. International Journal of Computer-Supported Collaborative Learning, 1(1):117–142. [Garcia and Jacobs, 1999] Garcia, A. and Jacobs, J. (1999). The eyes of the beholder: understanding the turn taking system in quasi-synchronous computer mediated communication. Research on Language and Social Interaction, 32(4):337–367. [Geyer et al., 2008] Geyer, W., Filho, S. R. S., Brownholtz, B., and Redmiles, D. F. (2008). The trade-offs of blending synchronous and asynchronous communication services to support contextual collaboration. Journal of Universal Computer Science, 14(1):4–26. [Gutwin etal., 1996] Gutwin, C., Greenberg, S., and Roseman, M. (1996). Workspace awareness in real-time distributed groupware: Framework, widgets, and evaluation. In Sasse, M., Cunningham, R., and Winder, R., editors, People and Computers XI (Proceedings of the HCI'96), pages 281–298, Imperial College, London, UK. Springer-Verlag. [Harnoncourt et al., 2005] Harnoncourt, M., Holzhauser, A., Seethaler, U., and Meinl, P. (2005). Referenzierbarkeit als Schlüssel zum effizienten Chat. In Beißwenger, M. and Storrer, A., editors, Chat-Kommunikation in Beruf, Bildung und Medien: Konzepte - Werkzeuge - Anwendungsfelder, pages 161–179. [Herring, 1999] Herring, S. (1999). Interactional coherence in CMC. Journal of Computer- Mediated Communication, 4(4). [Holmer, 2008] Holmer, T. (2008). Discourse structure analysis of chat communication. Language@Internet, 5. [Holmer et al., 2006] Holmer, T., Kienle, A., and Wessner, M. (2006). Explicit referencing in learning chats: Needs and acceptance. In Nejdl, W. and Tochtermann, K., editors, Innovative Approaches for Learning and Knowledge Sharing, pages 170–184. Springer Berlin. [Holmer and Wessner, 2004] Holmer, T. and Wessner, M. (2004). Tools for cooperative learning in l$^3$. In Ehlers, U., Gerteis, W., Holmer, T., and Jung, H., editors, E-Learning [[skimx://holmer2009diminishing#18|p. 18]]

Services in the Crossfire. Pedagogy, Economy and Technology, pages 138–152. Bertelsmann, Bielefeld. [Kuo et al., 2001] Kuo, C. H., Wible, D., and Chou, C. L. (2001). A synchronous efl writing environment for the internet. Journal of Universal Computer Science, 7(3):240–253. [Liu et al., 2001] Liu, Y., Ginther, D., and Zelhart, P. (2001). How do frequency and duration of messaging affect impression development in computer-mediated communication? Journal of Universal Computer Science, 7(10):893–914. [Mühlpfordt and Wessner, 2005] Mühlpfordt, M. and Wessner, M. (2005). Explicit referencing in chat supports collaborative learning. In Koschmann, T., Suthers, D. D., and Chan, T.-W., editors, Computer Supported Collaborative Learning 2005: The Next 10 Years!, pages 460– 469. Lawrence Erlbaum Associates. [Münzer and Xiao, 2005] Münzer, S. and Xiao, B. (2005). Small groups learning synchronously online at the workplace: The interaction of factors determining outcome and acceptance. Journal of Universal Computer Science, 11(3):378–393. [Pimentel et al., 2003] Pimentel, M. G., Fuks, H., and de Lucena, C. J. P. (2003). Co-text loss in textual chat tools. In Proceedings of Fourth International and Interdisciplinary Conference on Modeling and Using Context (CONTEXT 2003), LNAI 2680, pages 483–490. Springer- Verlag Berlin Heidelberg. [Schümmer and Lukosch, 2007] Schümmer, T. and Lukosch, S. (2007). Patterns for Computer- Mediated Interaction. John Wiley & Sons, Ltd. [Schümmer et al., 2006] Schümmer, T., Lukosch, S., and Slagter, R. (2006). Using patterns to empower end-users – The Oregon software development process for groupware. International Journal of Cooperative Information Systems, Special Issue on '11th International Workshop on Groupware (CRIWG'05)', 15(2):259–288. [Smith et al., 2000] Smith, M., Cadiz, J. J., and Burkhalter, B. (2000). Conversation trees and threaded chats. In Proceedings of the 2000 ACM Conference on Computer supported cooperative work, pages 97–105. ACM Press, New York, NY, USA. [Vronay et al., 1999] Vronay, D., Smith, M., and Drucker, S. (1999). Alternative interfaces for chat. In Proceedings of the 12th annual ACM symposium on User interface software and technology, pages 19–26. ACM Press, New York, NY, USA. [Werry, 1996] Werry, C. (1996). Linguistic and interactional features of internet relay chat. In Herring, S., editor, Computer-Mediated Communication: Linguistic, Social and Cross-Cultural Perspectives, pages 47–63. John Benjamins, Amsterdam. [[skimx://holmer2009diminishing#19|p. 19]]

