h2. Highlights (8%)

The simultaneous usage of more than one of these technologies has led MacNeill and Kraan (2010) to coin the term “Distributed Learning Environments” (DLEs), as the combination of two or more of the aforementioned (normally, web-based) tool [[skimx://prieto2014supporting#11|p. 11]]

current technological support for the transformation of a teacher’s pedagogical ideas (which can be expressed using multiple authoring tools, see e.g., Prieto, Dimitriadis, et al., 2013) into the ICT infrastructure needed to enact those ideas with students (i.e., in the form of a fully-configured DLE) is clearly lacking. [[skimx://prieto2014supporting#11|p. 11]]

a teacher trying to prepare a DLE-supported CSCL scenario will very likely have to go through the different tools and platforms that compose the DLE, and manually create, configure and link together all the resources involved in the envisioned scenario (for a more detailed discussion of this “deployment gap”, see Prieto, Asensio-Pérez, et al., 2011 and Prieto, Asensio-Pérez, et al., 2013). [[skimx://prieto2014supporting#11|p. 11]]

One of the most common evaluation metrics used by CSCL researchers around the topic of orchestration is what some authors call “orchestration load” (Dillenbourg, Zufferey, et al., 2011): “the effort necessary for the teacher [.] to conduct learning activities” (Cuendet, Bonnard, Do-Lenh, & Dillenbourg, 2013). [[skimx://prieto2014supporting#11|p. 11]]

centralize access to a set of web 2.0 tools (often tailorable, see Alario-Hoyos & Wilson, 2010; MacNeill & Kraan, 2010 for comparisons of existing alternatives to implement such DLEs) [[skimx://prieto2014supporting#12|p. 12]]

Due to its extensible adapter architecture and graphical user interface, GLUE!-PS enables teachers to semi-automatically deploy learning designs (expressed in a variety of languages and formats, at the teachers’ choice), across multiple flavours of DLE (i.e., one that uses GLUE! to integrate MediaWiki and Google Docs, or one that uses Basic LTI to integrate widgets into Moodle – complying with teachers’ and institutions’ current choices of platforms and web tools). Similarly, GLUE!-PS addresses the run-time flexibility challenge by allowing teachers to make changes to the deployed activities and resources in run-time, using the same user interface, and effecting those changes automatically across the DLE at the teacher’s command. [[skimx://prieto2014supporting#13|p. 13]]

These operations are supported, thanks to the automation of common orchestration operations that GLUE!-PS implements (creation or deletion of distributed resources, linkage of resources to one another and to the central VLE platform, group formation, etc.), in a time-efficient manner (when compared with the manual counterpart of going into each of the web platforms and tools involved). [[skimx://prieto2014supporting#13|p. 13]]

The methodology selected for these studies, following the advice of multiple researchers in the areas of CSCL and TEL when trying to capture such complex phenomena from different perspectives (Stahl, Koschmann, & Suthers, 2006; Strijbos & Fischer, 2007), was a mixed methods approach, more concretely, a concurrent embedded design (Creswell, 2009, p. 210), using profuse data gathering from different sources and techniques, similar to the one described by Martínez et al. (2006). [[skimx://prieto2014supporting#14|p. 14]]

The learning activities followed the jigsaw strategy (Aronson & Patnoe, 1997). [[skimx://prieto2014supporting#14|p. 14]]

A variety of quantitative and qualitative data sources were used in each study for the evaluation, including: the observation and recording of co-design/co-deploy sessions (in the case of authentic usage of GLUE!-PS, a researcher was present as an observer and to provide technical support should doubts arise); observation of enactment sessions (especially where run-time modifications of the DLE were expected); analysis of teacher-generated artifacts (e.g., documents describing the learning design); semi-structured interviews and focus groups. In the teacher workshop, the face-to-face sessions were also observed and recorded (including four parallel focus groups towards the end of the workshop), and pre-/post-workshop questionnaires were used to gather both profiling data as well as their opinions on the system usage. Fig. 3 represents the sequence of data gathering events within each study, and its later analysis to extract triangulated findings. [[skimx://prieto2014supporting#15|p. 15]]

This analysis was structured following an anticipated data reduction method (Miles & Huberman, 1994) around one main evaluative issue (evaluation question), which maps closely our main research question about GLUE!-PS’s orchestration support. In turn, and following our discussion on the orchestration challenges in CSCL using web-based DLEs (see Section 2.2), our issue was explored through four topics, which reflect the four main orchestration challenges that GLUE!-PS tries to overcome. This analysis structure is represented graphically in Fig. 4. [[skimx://prieto2014supporting#15|p. 15]]

In the [TIC] course, the enactment of the activities was fraught with unexpected events that prompted for run-time changes (latecomers, non-appearances, students mistaking the group/session they were to participate in, etc.). Despite the fact that the GLUE!-PS prototype did implement the ability to do run-time changes and re-deployment across the DLE at that time, the teacher chose not to use that feature. This was due to the fact that she had made manual changes to the wiki pages of the activities directly in the VLE (e.g. adding further instructions for students), and she did not want those changes to be overwritten by subsequent run-time re-deployments. This highlights the need for more agile synchronization between the deployed DLE and its representation/configuration in the GLUE!-PS system (e.g. so that the runtime changes done through GLUE!-PS do not overwrite teacher or student work done directly in the platform). In the interview after the course, the teacher was asked to reproduce some of the run-time changes that had been needed in the actual enactment (which had been done manually in the wiki by the teacher and the research team, taking several hours), this time using the GLUE!-PS user interface. The teacher noted that GLUE!-PS supported most needed changes, and enabled doing them in a time-efficient fashion. However, she also noted that much of the time needed for such changes (with or without GLUE!-PS) was spent conceptualizing the group composition constraints of the jigsaw strategy situation that was being used in the course. [[skimx://prieto2014supporting#19|p. 19]]

The orchestration support provided by GLUE!-PS can be compared with other DLE support proposals and systems. Prieto, Asensio-Pérez, et al., 2013 compare GLUE!-PS’s support for deploying learning designs with other alternatives to deployment: Basic LTI (IMS Global Learning Consortium, 2010), CADMOS (Katsamani & Retalis, 2011), GSI (de-la Fuente-Valentín, Pardo, & Delgado-Kloos, 2011) or the ACoMoD system (Drira, Laroussi, Le Pallec, & Warin, 2012). In this category of systems, the main added value of GLUE!-PS is its potential support for a wide range of web technologies (both authoring tools and enactment platforms) that are already in use by practitioners and institutions (i.e., not forcing them to change the technologies they use). [[skimx://prieto2014supporting#21|p. 21]]

In the same way, we could compare the orchestration support provided by GLUE!-PS with other orchestration support systems. However, as mentioned in Section 2.1, this comparison is difficult due to the very focussed support many of them provide to orchestration (e.g., Alavi et al., 2009 to progress awareness, or Hernández-Leo et al., 2012 to group management). [[skimx://prieto2014supporting#21|p. 21]]

In this regard, maybe a closer comparison to GLUE!-PS would be classroom management systems such as the one proposed by Niramitranon et al. (2010), or the SAIL Smart Classroom (Tissenbaum, Lui, & Slotta, 2012). This kind of integrated systems often provide very rich automation possibilities, such as the flow of data from one tool to another [[skimx://prieto2014supporting#21|p. 21]]

collaborative learning flow patterns (Hernández-Leo, Villasclaras-Fernandez, AsensioPérez, Dimitriadis, & Retalis, 2006), and were expressed using the Web Collage authoring tool. A [[skimx://prieto2014supporting#22|p. 22]]

For example, the fact that GLUE!-PS supports but also requires an up-front computer-interpretable definition of the learning design (positive support to the Design aspect) prompted certain changes in existing teacher practice (negative impact on the Pragmatism aspect), and placed most of the preparation load on the shoulders of the teacher (possible negative impact in the Role of the teacher aspect). [[skimx://prieto2014supporting#23|p. 23]]

References [[skimx://prieto2014supporting#23|p. 23]]

