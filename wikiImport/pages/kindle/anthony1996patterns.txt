h1. Kindle highlights

The "Patterns" section lists some patterns for teaching difficult technical topics (such as object-oriented programming), including patterns for examples, games, flow of the course, and dealing with different learning styles of students: each pattern has four portions. The first two, Problem and Constraints & Forces, lay out the context for the third portion, Solution. The fourth portion describes connections between Related Patterns. The "Pattern Language" section briefly describes how the patterns are used together in the course development process. **(loc: 9-14)**

These are patterns that I've discovered by talking to instructors and by being one. They apply primarily in the context of a class where a heterogeneous group of students work with one or two instructors, but some could be useful in nearly any educational setting. **(loc: 17-19)**

The patterns that follow are arranged in order of most abstract to most concrete. Several of the patterns, especially the more abstract ones, are strategies which lead to solutions. Others, especially the more concrete ones, are ready to implement. Pattern #1 has the highest level of abstraction, #2-6 next highest, and #7-14 are at the most concrete level. Within that arrangement, closely related patterns are together. For instance, the three patterns relating to examples are #8-10. There's no need to read them in the order presented. **(loc: 23-27)**

In the Problem portion of each pattern you will find the problem or group of problems that the pattern solves. The Constraints and Forces portion describes any additional context necessary to determine when to apply the pattern, and often this includes a more detailed restatement of the problem. The Solution portion contains the pattern's solution. The portion called Related Patterns includes both other patterns in this paper, and ones that aren't written yet (or they are and I haven't read them). **(loc: 19-23)**

The patterns that follow are arranged in order of most abstract to most concrete. Several of the patterns, especially the more abstract ones, are strategies which lead to solutions. Others, especially the more concrete ones, are ready to implement. **(loc: 23-25)**

At the end of the paper, you'll find a section called "The Pattern Language", an attempt to tie together the patterns below into a system of course development. Also discussed in that section are additional forces that may affect the patterns as a group; for example, the three "learning styles" which form part of the context of many of the patterns here. The three are: learning by doing, learning by seeing, and learning by hearing. **(loc: 27-30)**

This pattern is named after its problem, while most of these patterns are named after their solution. **(loc: 43-44)**

The Pattern Language In the beginning, there was the course concept. For example, the course developer might want to create a course that serves as an introduction to Object Oriented Programming. My assumptions are these: that the course developer knows the central ideas and skills the course should communicate, and has those skills, as well as some expertise with the material the course will contain. **(loc: 207-10)**

Developing a course, like developing a program, involves requirements gathering, analysis, design, and implementation. The above is the requirements and the beginnings of the analysis. During the design of the course, the course developer lays out the sequence in which the material will be presented, and decides the means of presentation. Usually the material will not organize itself neatly--often it takes a great deal of effort (and a number of iterations: pattern #1: "Iterative Course Development") to invent an effective organization for the presentation. Three natural groupings of topics often occur in a given body of material: A dependent group is a group of topics which belong together and must be explained together. Each is necessary to facilitate understanding of the rest. This formation causes one kind of problem: that in order to explain each of them, you must already have explained the others. Getting these into a module is self evident: they belong together. Organizing their order within the module is more problematic. (See pattern #2: "Chicken & Egg".) **(loc: 210-18)**

References [Howe77]Howe, M. J. A. (ed.), Adult-Learning-Psychological Research and Applications. Wiley, 1977. [Gagne70]Gagne, R.M., The Conditions of Learning, 2nd ed. Holt, Rinehart & Winston, 1970. [Goldstein74]Goldstein, I.L., Training: Program Development and Evaluation. Brooks/Cole, 1974. [Greene-Forbess83]Greene-Forbess, Sue, The Encyclopedia of Icebreakers: Structured Activities that Warm-up, Motivate, Challenge, Acquaint, and Energize. University Associates, CA., 1983. [Miller56]Miller, George A., "The Magical Number Seven, Plus or Minus Two: Some limits on our Capacity for Processing Information." Psychological Review, 63 (1956):81-97 [Pike94]Pike, Bob, Dynamic Openers & Energizers. Lakewood Publications, 1994. **(loc: 252-58)**

