h1. Kindle highlights

Collaboration scripts are usually implemented as parts of a particular collaborative-learning platform. Therefore, scripts of demonstrated effectiveness 73 Keywords separated by ' - ' 74 Foot note information are hardly used with learning platforms at other sites, and replication studies are rare. The approach of a platform-independent description language for scripts that allows for easy implementation of the same script on different platforms has not succeeded yet in making the transfer of scripts feasible. We present an alternative solution that treats the problem as a special case of providing support on top of diverse Web pages: In this case, the challenge is to trigger support based on the recognition of a Web page as belonging to a specific type of functionally equivalent pages such as the search query form or the results page of a search engine. The solution suggested has been implemented by means of a tool called S-COL (Scripting for Collaborative Online Learning) and allows for the sustainable development of scripts and scaffolds that can be used with a broad variety of content and platforms. The tool’s functions are described. In order to demonstrate the feasibility and ease of script reuse with S-COL, we describe the flexible re-implementation of a collaboration script for argumentation in S-COL and its adaptation to different learning platforms. To demonstrate that a collaboration script implemented in S-COL can actually foster learning, an empirical study about the effects of a specific script for collaborative online search on learning activities is presented. The further potentials and the limitations of the S-COL approach are discussed. **(loc: 27-38)**

Instead of trying to get 49 different platforms to display functionally equivalent but platform-specific versions of the 50 “same” script, we suggest using a pre-implemented script that is embedded in the learner Research on technology-based collaboration scripts has been very successful in terms of the 34 development of a broad range of scripts that effectively foster activities and outcomes of 35 computer-supported collaborative learning (e.g., Baker and Lund 1997; De Wever et al. 36 2009; Kollar et al. 2007; Rummel and Spada 2005; Schellens et al. 2007; Schoonenboom 37 2008; Slof et al. 2010; Stegmann et al. 2007; Weinberger et al. 2005; Weinberger et al. 38 2010). The growing importance of this field of research is evidenced by—among other 39 things—the announcement of “Scripting in CSCL” as a “flash theme” in the International 40 Journal of Computer-Supported Collaborative Learning (Stahl and Hesse 2007). **(loc: 65-76)**

However, 41 technology-based collaboration scripts are usually developed exclusively for one specific, 42 often experimental, learning platform. Neither the transfer to other experimental platforms 43 nor the transfer into practice has been managed systematically so far. Among the current 44 approaches to overcome these problems, the most prominent one is the attempt to develop a 45 universal formal language (e.g., an extension of IMS-LD) for the specification of scripts to 46 be “read in” and implemented by different collaborative-learning platforms (Weinberger et 47 al. 2007). PROOF’s 51 Web browser. This requires that specific components of the script be invoked whenever the 52 browser recognizes pages displayed by a learning platform as being of the corresponding 53 types of functionally equivalent pages. We call this the S-COL (Scripting for Collaborative 54 Online Learning) approach to the development of flexibly reusable collaboration scripts for 55 diverse Web content. Because of the shift mentioned, the S-COL approach can be regarded 56 as a kind of two-fold “Copernican Turn” in script development: First, instead of the 57 learning platform, the browser of the learner is moved into the centre of script development 58 by making it the source of the support displayed to the learners. Second, the burden of 59 creating flexibility is shifted from the idea of a universal formal description of a 60 collaboration script to be generated by any learning platform to the task of triggering the 61 appropriate components from a pre-implemented script. 62 **(loc: 76-89)**

We need to clarify right from the start that our claim in this article is not that the S-COL 63 approach leads to superior learning compared to other approaches to the implementation of 64 collaboration scripts or unstructured collaboration. S-COL simply provides a technical 65 frame for the implementation of collaboration scripts. Accordingly, it can be used to 66 implement scripts, including ineffective and even 67 detrimental ones. What we do claim, however, is that diverse types of collaboration scripts 68 can be implemented in S-COL with no more effort than implementing a script as part of a 69 specific learning platform, yet with the advantage of flexible reusability within different 70 learning platforms. This is not a claim about the psychology or instructional design of 71 computer-supported collaborative learning. It is a claim about the power and generality of a 72 framework support for computer-supported collaborative 73 learning, which we think advances an ongoing discussion in this journal and in the CSCL 74 community (e.g., Dillenbourg, and Tchounikine 2007; Harrer and Malzahn 2006; Kobbe et 75 al. 2007UNCORRECTED 2009; Tchounikine 2008; Weinberger et al. 76 2007 **(loc: 89-100)**

looking for a way to provide support for ninth-grade high school students 120 during collaborative online search. In an interdisciplinary collaboration involving 121 educational psychologists and computer scientists, our goal was to develop a tool that 122 enables learners working on different computers to conduct collaborative online searches 123 and provides contentsupport for this collaborative task to each 124UNCORRECTEDparticipant. **(loc: 129-33)**

a feasible approach would rely on computer-based scaffolds that display just-in153 time assistance to each individual learner (Pea 2004; Puntambekar and Hübscher 2005; 154 Quintana et al. 2004). **(loc: 156-58)**

approach led the way to the development of a universal formal language for the description 191 of collaboration scripts (Kobbe et al. 2007; cf. also Kollar et al. **(loc: 173-75)**

In some of our own 176 studies (e.g., Stegmann et al. 2007; Weinberger et al. 2005), we used a discussion board 177 developed by ourselves because this allowed for the easy implementation of the 178 collaboration scripts under investigation in the learning platform itself: For example, a 179 script for the construction of arguments can easily be implemented by means of prompts 180 and separate textboxes for the parts of an elaborated argument. These textboxes can be 181 embedded in the form for entering messages and their contents can be composed into one 182 continuous message before posting the contribution (see Fig. 3, part a). Thus, the 183 collaboration scripts were always part and parcel of the learning platform itself. 184 **(loc: 176-82)**

This universal scripting language 195 accommodates a small but still comprehensive number of components and mechanisms 196 of computer-supported collaboration scripts: The components are participants, activities, 197 roles, resources, and groups; the mechanisms comprise task distribution, group formation, 198 and sequencing. 199 On the basis of this universal scripting language, a graphical modelling tool for 200 designing new collaboration scripts has been developed (Harrer and Malzahn 2006). As an 201 output, the modelling tool produces an IMS-LD file, that is, a file that can be read by all 202 learning platforms that support the IMS Global Learning Consortium Standards (cf. Miao et 203 al. 2007). Based on these ideas, a functional framework for accelerating the implementation 204 of scripts represented in IMS-LD for devices such as tabletop displays or mobile phones has 205 been developed (Stegmann et al. 2009). However, we are not aware of any learning 206 platform that is generally available and can import and implement a description of a 207 collaboration script as an IMS-LD file using this IMS-LD extension. 208 A further promising approach to provide a universal language for the scaffolding of 209 collaborative learning is the “ Learning Activity Management System” (LAMS; Dalziel, 210 Q6 2003). LAMS provides a graphical modelling tool for sequencing a variety of predefined 211 activities (e.g., a chat tool followed by an individual phase, followed by a plenary 212 discussion). The sequences of activities designed with LAMS can be integrated into several 213 learning platforms such as Moodle, Sakai,or Blackboard. However, the activities that can 214 be sequenced are restricted by the activities available in the graphical authoring tool. 215 Furthermore, the activities cannot be “micro-scripted,” that is, learners can be prompted to 216 discuss, but specific activities during discussion, such as the formulation of arguments, 217 cannot be supported. 218 Another approach is “ManyScripts” (Dillenbourg and Hong 2008): This tool offers 219 teachers an environment to adapt a set of specific scripts with regard to their own needs, 220UNCORRECTED JrnlID 11412_ArtID 9093_Proof# 1 - 28/06/2010 C. Wecker, et al. especially their own learning material. At the moment, the Concept Grid, Argue Graph 221 (Dillenbourg and Jermann 2007), and Ice (Dillenbourg and Hong 2008) scripts are available 222 (Manyscripts 2009). For example, the Argue Graph script forms groups of students with 223 divergent opinions with respect to a specific domain (e.g., drug use in sports). To adapt the 224 Argue Graph script, teachers can easily define their own questions that will be used to form 225 these divergent groups. However, the ManyScripts environment is a stand-alone learning 226 platform. A native integration into other learning platforms has not been a goal and is not 227 supported yet. 228 Consequently, currently neither the universal scripting language and graphical 229 modelling approaches, nor the ManyScripts approach are suitable for developing new 230 scripts and implementing them on a broad range of different learning platforms. A 231 framework that effectively supports the reusability of technology-based collaboration 232 scripts is not available so far. The transfer of a collaboration script from one 233 collaborative-learning platform to another is still hampered by the need to adapt and 234 integrate the script into the new learning platform. Therefore, a solution for using 235 scripts developed and tested on one learning platform on other platforms is also still a 236 desideratum. **(loc: 189-220)**

In most learning 270 platforms, the form for entering messages consists of functionally equivalent parts such as 271 separate fields for the message and its title as well as a button for posting the message. 272 Again, if a component of the browser manages to recognize this type of page and the types 273 of its component objects, the components of a collaboration script pre-implemented in the 274 browser can be triggered. The prompts and textboxes constituting the collaboration script 275 can be displayed in a separate area of the browser window, and the contents of the single 276 textboxes can be composed and sent to the message field when posting the message. The 277 advantage of this approach lies in the fact that it allows for the use of a library of already 278 implemented collaboration scripts contained in the browser that can be used with a broad 279 variety of Web-based collaboration tools. 280 **(loc: 243-50)**

The tool was implemented as a browser plug-in. Accordingly, the main part of its graphical user 287 interface is the browser itself. The area of the browser used for displaying Web pages is broken 288 up in two parts (see Fig. 1). The area on the right-hand side is called the “browsing area.” It 289 exhibits exactly the same behaviour as a standard Web browser: It can present any kind of 290 Web page, and the user can navigate by using links and menu elements of the browser such 291 as the home, forward, and backward buttons or entering a URL. The part on the left-hand side 292 is called the “scaffolding area.” Its size is flexibly adaptable both by the user dragging its 293 border as well as by programmed functions (in JavaScript). Furthermore, it can be invoked 294 and hidden by a function key. Its content can be flexibly designed using HTML. The content 295 of the scaffolding area (textboxes, buttons, etc.) can “interact” with objects in the browsing 296 area. For instance, information from the browsing area such as the content of tables and 297 textboxes or the URL of the actually displayed Web page can be read out. Furthermore, the 298 browsing area can be controlled and manipulated by the tool by means of automatically 299 posting text into forms, activating buttons, or even by navigating to an arbitrary URL. The 300 scaffolding area moreover contains a menu bar (right above “Evaluation of the results page” 301 in Fig. 1) providing functionalities such as loading collaboration scripts or scaffolds and 302 configuring the navigation behaviour of the tool (see below). 303 Tool functionsUNCORRECTED304 The tool provides two main functions: It can display support in the scaffolding area 305 depending on the type of content displayed in the browsing area and on the role that a 306 learner has been assigned before, and it allows for collaborative navigation on the Web 307 using several interconnected browsers. **(loc: 253-69)**

Collaborative Web browsing The tool, furthermore, allows for collaborative Web browsing. 326 This is to say that all learners belonging to the same group can automatically view the same 327 Web pages in their browsers. The assignment to groups is done via a dialog window for 328 group formation (described in more detail below). Each member of a group has the 329 opportunity toUNCORRECTED to a different Web page: By simply using his or her 330 Computer-Supported Collaborative Learning browser the usual way, that is, by clicking on links, menu elements, or entering a new URL, 331 one member brings a new page onto the screens of all members of the group. If a learner 332 opens a new tab, new tabs will be opened in all connected browsers. 333 The collaborative Web-browsing function can be adapted in several ways. In 334 principle, each user can dissociate him- or herself from collaborative Web browsing. 335 This comprises an active and a passive component: On the one hand, a user may switch 336 off the function that “sends” his or her navigation actions to the other group members. 337 This has the effect that his or her navigation actions no longer influence what is 338 displayed on the computer screens of the other members of the group, so he or she can 339 no longer “lead” the group to other pages. On the other hand, he or she may switch off 340 the function that “receives” the navigation actions of the other group members. This 341 has the effect that navigation actions of other group members no longer influence what 342 is displayed on the respective group member’s computer screen, so he or she no longer 343 “follows” other group members to other pages. S-COL also offers a JavaScript function 344 that can be used by script developers to switch these communication functions on and 345 off, for example, depending on the page type currently displayed in the browsing area: 346 Learners might be dissociated from collaborative navigation whenever one group 347 member logs into a learning platform for individual study of learning materials, and 348 reconnected as soon as all members are outside of this platform again. Furthermore, the 349 rights to manually switch on and off the “sending” and “receiving” of navigation 350 actions can be configured globally to allow teachers to control their students’ options 351 during collaborative-learning tasks on the Internet. PROOF 353 **(loc: 283-302)**

the formation of groups (cf. 358 Kobbe et al. 2007) **(loc: 305-6)**

So far, S-COL has not been used by practitioners, but it has constituted the framework for 426 the implementation of support in several studies about Web-based inquiry learning, design427 based learning, and case-based learning in CSCL environments at the university and high 428 school levels that took place in Egypt (El-Refai et al. 2010 and Germany (e.g., Wecker et al. 429 2010)). **(loc: 351-54)**

The collaboration script considered in this first example is one from a rather large number 444 of collaboration scripts investigated in a series of studies (e.g., Stegmann et al. 2007; 445 Weinberger et al. 2005 ): So far, more than 35 different collaboration scripts, combinations 446 of collaboration scripts or translations have been developed, and experimental studies with 447 about 1,000 students have been conducted. All these collaboration scripts were originally 448 implemented as an embedded part of the experimental CASSIS (Computer-supported 449 Argumentation Supported by Scripts— experimental Implementation System) learning 450 platform (described in Clark et al. 2008; Clark et al. 2010). On this platform, three 451UNCORRECTEDstudents per group discussed problem cases in a customized asynchronous text-based 452 discussion board while sitting in different laboratory rooms. The interface allowed for the 453 JrnlID 11412_ArtID 9093_Proof# 1 - 28/06/2010 C. Wecker, et al. exchange of text messages that resemble emails (for details on the methodology and the 454 results of these experiments, see Stegmann et al. 2007; Weinberger et al. 2005). **(loc: 363-75)**

The data gathered in experiments with this original implementation demonstrated that 480 the script for the construction of arguments had a positive effect on learning activities and 481 outcomes: Learners supported by this script constructed more formally complete arguments 482 and acquired more knowledge about the construction of arguments than learners who were 483 not supported by the script (Stegmann et al. 2007). 484 **(loc: 395-98)**

important steps have been made toward a universal 842 scripting language (cf. Harrer and Malzahn 2006). An implementation of an interpreter of 843 this IMS-LD based language in S-COL would allow the graphical modelling of new 844 collaboration scripts and their broad application in many Web-based learning platforms. 845 Subsequently, the transfer of successful scripts as well as systematic research on scripts 846 would be much easier to conduct. Also, approaches like “ManyScripts” (Dillenbourg and 847 Hong 2008) could be integrated into the scaffolding area of S-COL. Thereby, the tool may 848 bridge the gap between the development of new technology-based collaboration scripts and 849 their systematic application in research and practice. In our interdisciplinary collaboration 850 between educational psychologists and computer scientists, furthermore, we quickly 851 learned that this approach is not necessarily restricted to collaboration scripts but might 852 be applied to other situations in which collaborative learning involving varying Web 853 content should be supported by just-in-time scaffolding. PROOF **(loc: 630-39)**

::what is the difference between scaffolding and scripting:: **(loc:  639)**

In the wake of the features of S-COL that allow for an easy implementation of 855 collaboration scripts, several additional functions to support research were developed. For 856 example, if it is necessary to analyze the online search activities of learners, usually screen 857 recordings have to be analyzed. S-COL can log the browsing behaviour including all clicks, 858 mouse movements, and the content (i.e., the DOM) of all visited Web pages. S-COL may 859 also help to transfer identification data from pre-test to post-test in field studies, even without 860 awareness of the participants, thereby reducing the likelihood of mistakes and data loss. 861 Furthermore, the tool can be used to administer process measurements (e.g., for measures of 862 cognitive load or flow experiences) in the context of an application of the Experience 863 Sampling Method (ESM) during learning activities: By means of a function using the 864 messaging system of S-COL that implements collaborative Web browsing, each individual 865 browser in a network can be triggered to open a short questionnaire in a pop-up window. 866 Some limitations and open issues also remain to be discussed. The main limitation of S867 COL is the restriction of its full range of features to HTML-based learning platforms: 868 Currently, S-COL can only “talk to” elements such as textboxes and buttons on HTML 869 pages. However, a growing share of learning platforms now implements Java- or Flash870 based communication tools. Accordingly, the use of these tools can hardly be scaffolded 871 with S-COL. Besides, the possibility of the logging of all user events including the DOM 872 constitutes a hazard with respect to the protection of user data: S-COL could easily be 873 configured to trace all Web activities of a user, even on a keystroke level, and send these 874 data to a server anywhere on the Web. However, an S-COL version without unsafe tracing 875 functions could easily be derived from the current version. 876 **(loc: 640-54)**

References 884 Baker, M., & Lund, K. (1997). Promoting reflective interactions in a CSCL environment. Journal of 885 Computer Assisted Learning, 13 (3), 175–193. 886Bilal, D. (2002). Children’s use of the Yahooligans! Web search engine: III. Cognitive and physical behaviors 887 on fully self-generated search tasks. Journal of the American Society for Information Science and 888 Technology, 53(13), 1170–1183. 889 Clark, D., Sampson, V., Stegmann, K., Marttunen, M., Kollar, I., Janssen, H., et al. (2010). Online learning 890 environments, scientific argumentation, and 21st century skills. In B. Ertl (Ed.), E-collaborative 891knowledge construction - learning from computer-supported and virtual environments (pp. 1–39). 892 Hershey: IGI Global. 893 Clark, D. B., Stegmann, K., Weinberger, A., Menekse, M., & Erkens, G. (2008). Technology-enhanced 894 learning environments to support students’ argumentation. In S. Erduran & M. P. Jiménez-Aleixandre 895(Eds.), Argumentation in science education (pp. 217–243). Dordrecht: Springer. 896 De Wever, B., Van Keer, H., Schellens, T., & Valcke, M. (2009). Structuring asynchronous discussion 897 groups: The impact of role assignment and self-assessment on students’ levels of knowledge 898 construction through social negotiation. Journal of Computer Assisted Learning, 25, 177–188. 899 Dillenbourg, P., & Jermann, P. (2007). Designing integrative scripts. In F. Fischer, H. Mandl, J. M. Haake, & 900I. Kollar (Eds.), Scripting computer supported communication of knowledge: Cognitive, computational 901 and educational perspectives (pp. 275–301). New York: Springer. Dillenbourg, P., & Hong, F. (2008). The mechanics of CSCL macro scripts. Computer-Supported Collaborative Learning, 3(1), 5–23. Dillenbourg, P., & Tchounikine, P. (2007). Flexibility in macro-scripts for CSCL. Assisted Learning, 23(1), 1–13. 902 International Journal of 903 904 Journal of Computer 905 906 El-Refai, W., Kollar, I., & Fischer, F. (2010, August/September). Supporting Online Design-Based Learning 907 with Collaboration Scripts and Incomplete Concept Maps. Paper to be presented at the meeting of 908 EARLI SIG 6 (“Instructional Design for motivated and competent learning in a digital world”) and 909EARLI SIG 7 (“Learning and Instruction with Computers)”. Ulm, Germany. 910 Greasemonkey (2009). Retrieved 22 June 2010, http://en.wikipedia.org/wiki/GreasemonkeyPROOF . 911 Harrer, A., & Malzahn, N. (2006). Bridging the Gap — Towards a Graphical Modeling Language for Learning 912 Designs and Collaboration Scripts of Various Granularities. Proceedings of the Sixth IEEE International 913 Conference on Advanced Learning Technologies (ICALT'06) (pp. 296–300). Kerkrade, the Netherlands: 914IEEE Computer Society Press. 915 Hewitt, J., & Aillon, C. (2003). DOM Inspector. Retrieved 22 June 2010, from https://developer.mozilla.org/ 916 En/DOM_Inspector. 917 Ikpeze, C. H., & Boyd, F. B. (2007). Web-based inquiry learning: Facilitating thoughtful literacy with 918 WebQuests. The Reading Teacher, 60(7), 644–654. 919 Kobbe, L., Weinberger, A., Dillenbourg, P., Harrer, A., Hämäläinen, R., Häkkinen, P., et al. (2007). 920 Specifying computer-supported collaboration scripts. International Journal of Computer-Supported 921 Collaborative Learning, 2,211–224. 922 Kollar, I., Fischer, F., & Hesse, F. W. (2006). Collaboration scripts—A conceptual analysis. Educational 923Psychology Review, 18, 159–185. 924 Kollar, I., Fischer, F., & Slotta, J. D. (2007). Internal and external scripts in computer-supported collaborative 925 inquiry learning. Learning and Instruction, 17(6), 708 721. 926 Lazonder, A. W. (2005). Do two heads search better than one? Effects of student collaboration on web search 927 behaviour and search outcomes. British Journal of Educational Technology, 36(3), 465–475. 928Luconi, F., & Tabatabai, D. Searching the Web: Expert-Novice Differences in a Problem-Solving Context. 929 Retrieved 22 June 2010, http://www.eric.ed.gov/PDFS/ED429619.pdf. 930 Manyscripts (2009). Retrieved 22 June 2010, http://manyscripts.epfl.ch/. 931 Miao, Y., Harrer, A., Hoeksema, K., & Hoppe, H. U. (2007). Modeling CSCL scripts—a reflection on 932learning design approaches. In F. Fischer, I. Kollar, H. Mandl, & J. M. Haake (Eds.), Scripting 933 computer-supported collaborative learning — cognitive, computational and educational perspectives (pp. 934 117– 935 Pea, R. D. (2004). The social and technological dimensions of scaffolding and related theoretical 936 concepts for learning, education, and human activity. The Journal of the Learning Sciences, 13(3), 937423– 938 Pirolli, P. (2005). Rational analyses of information foraging on the Web. Cognitive Science, 29, 343– 939 373. 940 Puntambekar, S., & Hübscher, R. (2005). Tools for scaffolding students in a complex learning environment: 941 What have we gained and what have we missed? Educational Psychologist, 40(1), 1–12. 942UNCORRECTED Computer-Supported Collaborative Learning Quintana, C., Reiser, B. J., Davis, E. A., Krajcik, J., Fretz, E., Duncan, R. G., et al. (2004). A scaffolding 943 design framework for software to support science inquiry. The Journal of the Learning Sciences, 13(3), 944 337 –386. 945Rogers, D., & Swan, K. (2004). Self-regulated learning and Internet searching. Teachers College Record, 106 946 (9), 1804–1824. 947 Rummel, N., & Spada, H. (2005). Learning to collaborate: An instructional approach to promoting 948 collaborative problem solving in computer-mediated settings. The Journal of the Learning Sciences, 14 949(2), 201–241. 950 Schellens, T., Van Keer, H., De Wever, B., & Valcke, M. (2007). Scripting by assigning roles: Does it 951 improve knowledge construction in asynchronous discussion groups? International Journal of 952 Computer-Supported Collaborative Learning, 2(2–3), 225–246. 953 Schoonenboom, J. (2008). The effect of a script and an interface in grounding discussions. International 954Journal of Computer-Supported Collaborative Learning, 3(3), 327–341. 955 Slof, B., Erkens, G., Kirschner, P. A., Jaspers, J. G. M., & Janssen, J. (2010). Guiding students ’ online 956 complex learning-task behavior through representational scripting. Computers in Human Behavior, 26 957 (5), 927–939. 958 Slotta, J. D., & Linn, M. C. (2000). How do students make sense of Internet resources in the science 959classroom? In M. J. Jacobson & R. Kozma (Eds.), Learning the sciences of the 21st century. Mahwah: 960 Erlbaum. 961 Slotta, J. D., & Linn, M. C. (2009). WISE science: Web-based inquiry in the classroom. New York: Teachers 962 College Press. 963Stahl, G., & Hesse, F. (2007). Welcome to the future: ijCSCL volume 2. International Journal of Computer964 Supported Collaborative Learning, 2(1), 1–5. 965 Stegmann, K., Streng, S., Halbinger, M., Koch, J., Fischer, F., & Hussmann, H. (2009). eXtremely Simple 966 Scripting (XSS): A framework to speed up the development of computer-supported collaboration scripts. 967 In A. Dimitracopoulou, C. O'Malley, D. Suthers, & P. Reimann Computer Supported 968Collaborative Learning Practices: CSCL2009 Community Events Proceedings (pp. 195–197). ISLS 969 Stegmann, K., Weinberger, A., & Fischer, F. (2007). Facilitating argumentative knowledge construction with 970 computer-supported collaboration scripts. International Journal of Computer-Supported Collaborative 971 972 Tchounikine, P. (2008). Operationalizing macro-scripts in CSCL technological settings. Learning, 2(4), 421–447. PROOF International Journal 973 of Computer-Supported Collaborative Learning, 3 (2), 193–233. 974 Tomaiuolo, N. G., & Packer, J. G. Web search engines: Key to locating information for all users or only the 975 cognoscienti. In Online Information 96. Proceedings of the International Online Information Meeting 976 (20th, Olympia 2, London, England, United Kingdom, December 3-5, 1996), Retrieved 22 June 2010, 977http://www.eric.ed.gov/PDFS/ED411811.pdf 978 Van Merrienboer, J. J. G., Clark, R. E., & de Crock, M. B. M. (2002). Blueprints for complex learning: The 979 4C/ID model. Educational Technology Research and Development, 50(2), 39–64. 980 Wecker, C., Kollar, I, Fischer, F., & Prechtl, H. (2010, June/July). Fostering online search competence and 981 domain-specific knowledge in inquiry classrooms: Effects of continuous and fading collaboration scripts. 982Paper presented at the 9th International Conference of the Learning Sciences (ICLS), Chicago, June, 29 983 – July, 2, 2010. 984 Wecker, C., Kollar, I., & Fischer, F. (2009). Fostering domain-specific knowledge through the fading of 985 scripts. In A. Dimitracopoulou, C. O'Malley, D. Suthers, & P. Reimann (Eds.), Computer supported 986 collaborative learning practices: CSCL2009 Community events proceedings (p. 38). International 987Society of the Learning Sciences. 988 Weinberger, A., Ertl, B., Fischer, F., & Mandl, H. (2005). Epistemic and social scripts in computer-supported 989 collaborative learning. Instructional Science, 33(1), 1 30. 990 Weinberger, A., Ronen, M., Tchounikine, P., Harrer, A., Dillenbourg, P., Haake, J., et al. (2007). Languages 991and platforms for CSCL Scripts. In C. Chinn, G. Erkens, & S. Puntambekar (Eds.), [Proceedings of the] 992 CSCL 2007. Rutgers, The State University of New Jersey, New Brunswick, New Jersey, USA, July 16th 993 July 21st, 2007 (pp. 831–832). International Society of the Learning Sciences 994 Weinberger, A., Stegmann, K., & Fischer, F. (2010). Learning to argue online: Scripted groups surpass 995 individuals (unscripted groups do not). Computers in Human Behavior, 26, 506–515. 996Zigo, V. (2009). XPather Documentation. Retrieved 22 June 2010, from http://xpath.alephzarro.com/ 997 **(loc: 660-751)**

