h1. Description of all the files in the github repository
(about [[start|researchr]])

All files can be downloaded from [[https://github.com/houshuang/folders2web|github]]. Because I constantly change the files to suit my own workflow and experiments, and because this has grown quite organic, rather than being planned, it's a bit of a mishmash. This is an attempt at documenting which files do what, and show how it all "hangs together".

I have attached links to the source in github, and also shown which keyboard shortcuts I have assigned the various scripts (see [[keyboard shortcuts]]). These have nothing to do with the programs themselves, of course, and can be freely assigned. Unless something else is indicated, my shortcuts start with <key>CTRL-ALT-CMD</key> to avoid conflicting with existing program shortcuts.

Also see my [[design patterns]], where I have documented some neat ways of coding, and [[:appscript|a list of the Appscript strings I have used]].

h2. BibDesk
Read more about [[:bibdesk|BibDesk hacks in general]]

| bibdesk-copy.rb | [[folders2web>bibdesk-copy.rb|src]] | Copies all the selected publications onto the clipboard, in the format [@citekey], which are understood by DokuWiki and WordPress renders, as well as PanDoc. | <key>c</key>|
| bibdesk-linkfile.rb | [[folders2web>bibdesk-linkfile.rb|src]] | Automatically attaches the most recent PDF file in the Download directory to the currently selected publication | <key>l</key>|
| bibdesk-qlook.rb | [[folders2web>bibdesk-qlook.rb|src]] | Launches quicklook to quickly preview currently selected file | <key>ALT-SPACE</key>|
| bibdesk-kindle.rb | [[folders2web>bibdesk-kindle.rb|src]] | Reformats and sends the selected files to Kindle, either by copying, or through e-mail (if Kindle is not connected) | <key>k</key> | 
| bibdesk.rb | [[folders2web>bibdesk.rb|src]] | Opens selected citations from BibDesk in Chrome, creating metadata pages if they don't already exist | <key>CMD-e</key>|
| bibdesk.app | [[folders2web>bibdesk.app|src]] | App-wrapper for an AppleScript that launches bibdesk-url.rb, and is connected to the bibdesk: URL scheme | 
| bibdesk-url.rb | [[folders2web>bibdesk-url.rb|src]] | Launched by a bibdesk: URL through bibdesk.app, opens the citation given in BibDesk | 
| gscholar.rb | [[folders2web>gscholar.rb|src]] | Looks up the title of the currently selected publication on Google Scholar, and displays a list of the top hits with PDFs available for download (for use with gscholar-y.rb)  | <key>g</key> |
| gscholar-y.rb | [[folders2web>gscholar-y.rb|src]] | Takes a number argument, reads the file generated by gscholar.rb,  downloads the correct file, and autolinks it to the selected publication | <key>1..8</key> |

h2. Skim
| skim.rb | [[folders2web>skim.rb|src]] | Exports all highlights, notes and images from open PDF file to wikipage, also generating citations (see [[anatomy of a publication page]]) | <key>CMD-e</key> |
| skim-screenshots.rb | [[folders2web>skim-screenshots.rb|src]] | Adds path of most recent screenshot in Desktop folder to a temp file, used when skim.rb exports notes to wiki. First use <key>S-CMD-2</key> or <key>S-CMD-3</key> to take screenshot, then this to add to cache | <key>c</key>|
| skimx.app | [[folders2web>skimx.app|src]] | App-wrapper for an AppleScript that launches skim-url.rb, and is connected to the skimx: URL scheme | |
| skim-url.rb | [[folders2web>skim-url.rb|src]] |Launched by a skimx: URL through skimx.app, opens the PDF given in Skim (on the page given, if specified)  | |

h2. DokuWiki
Although these scripts are written to interact with DokuWiki, they interact directly with Chrome.
| dokuwiki-bulletlist.rb | [[folders2web>dokuwiki-bulletlist.rb|src]] | Converts the selected text to a DokuWiki bullet list, splitting on LF, comma, semicolon or space (trying to determine intelligently which one to use) | <key>p</key> |
| dokuwiki-clip.rb | [[folders2web>dokuwiki-clip.rb|src]] | Asks for a page name, and appends selected text on current page to that wiki page, with proper citation | <key>i</key> |
| dokuwiki-go.rb | [[folders2web>dokuwiki-go.rb|src]] | Presents a wiki page selector and opens the selected page | <key>'</key> |
| dokuwiki-image.rb | [[folders2web>dokuwiki-image.rb|src]] | Moves the most recent screenshot to the DokuWiki media folder, and inserts a proper DokuWiki image tag | <key>c</key> |
| dokuwiki-sbs.rb | [[folders2web>dokuwiki-sbs.rb|src]] | Asks for the name of a page, and presents it side-by-side with the existing page, in editing mode if it's a wiki page, and run through Instapaper to clean it up, if it's a normal page | <key>:</key> |
| newauthor.rb | [[folders2web>newauthor.rb|src]] | Launched through a ruby: link in the DokuWiki sidebar, asks for the name of an author, and creates a new author page according to template. Wouldn't be necessary if 404redirect plugin enabled templates when opening a new file for editing automatically |
| sbibtex.php | [[folders2web>sbibtex.php|src]] | Plugin for DokuWiki which renders [@citekey] as Author, Author2 (year), linked to the main publication page, and shows the full citation on mouse-over. Gets its data from the json file generated by bibtex-batch.rb |  |

h2. Chrome
| imfeelinglucky.rb | [[folders2web>imfeelinglucky.rb|src]] | Script similar to gscholar.rb, searches for currently selected phrase in Google, gives you top hits, let's you choose one (through imfeelinglucky-y.rb) and then inserts a fully formatted links, depending on whether you are currently browsing a wikipage, WordPress, or any other page. Currently doesn't work, because Google blocked the API | <key>l</key>|
| imfeelinglucky-y.rb | [[folders2web>imfeelinglucky-y.rb|src]] | See above| <key>1..4</key> |
| ruby.app | [[folders2web>ruby.app|src]] | App-wrapper for an AppleScript that launches ruby.rb, and is connected to the ruby: URL scheme | |
| ruby.rb | [[folders2web>ruby.rb|src]] | Launches whatever ruby script was specified by a ruby: URL, through ruby.app, used for newauthor.rb | |

h2. Kindle
| kindle-mount.rb | [[folders2web>kindle-mount.rb|src]] | Script that processes a My Documents.txt file from Kindle, and imports all clippings into DokuWiki (can be launched automatically on mount, see [[:launchd]]) |
| kindle-mount.sh | [[folders2web>kindle-mount.sh|src]] | Bash-script to run kindle-mount.rb, needed by launchd |

h2. Other apps
| qlmanage-doc2pdf.rb | [[folders2web>qlmanage-doc2pdf.rb|src]] | Uses quicklook to generate a PDF of Word doc, RTF etc currently selected in Finder | <key>p</key>| 
| devonthink.rb | [[folders2web>devonthink.rb|src]] | Opens currently selected publication in DevonThink in DokuWiki (used for importing entire BibDesk PDF folder into DevonThink for full-text search | <key>CMD-e</key> |
| convert-doc.rb | [[folders2web>convert-doc.rb|src]] | Takes a text file as argument, and converts it into HTML formatted for opening in Word, converting all citekeys into proper citations, and adding a reference list. Inspired by Pandoc, still very early days. Should eventually be able to output to different formats. |  |

h2. Utility scripts
| bibtex-batch.rb | [[folders2web>bibtex-batch.rb|src]] | Runs through Bibliography.bib (generated by BibDesk) and generates [[:bib:bibliography|main bibliography]], bibliography pages [[abib:start|by author]] and [[kbib:start|by keyword]], and json bibliography cache for WordPress and DokuWiki plugins |
| utility-functions.rb | [[folders2web>utility-functions.rb|src]] | A number of useful functions used by other scripts, such as wrapper for growl, File.write and File.append, wrappers for pbcopy and pbpaste, clean_pagename (see below), GUI wikipage selector, wrapper for dwpage (insert page in DokuWiki), etc.  |
| clean_id.php | [[folders2web>clean_id.php|src]] | Extracted from DokuWiki source code, takes a title and turns it into a DokuWiki filename (Ã¼ -> ue etc). Used by //clean_pagename()// in utility-functions.rb |
| utf8.php | [[folders2web>utf8.php|src]] | Helper script for clean_id.php, from DokuWiki source code |
| wiki-lib.rb | [[folders2web>wiki-lib.rb|src]] | Functions for DokuWiki, mainly //ensure_refpage()// which generates the main publication page (see [[anatomy of a publication page]]) |
| mail-lib.rb | [[folders2web>mail-lib.rb|src]] | Helper function for e-mail, used by bibdesk-kindle.rb |
| config.yaml.distribution | [[folders2web>config.yaml.distribution|src]] | Rename to config.yaml and modify, used by mail-lib.rb |
| update_refpage.rb | [[folders2web>update_refpage.rb|src]] | Command-line script to force updating of main publication page (citation info), usually //ensure_refpage()// only does this if file doesn't already exist |
| Pashua.rb | [[folders2web>Pashua.rb|src]] | Helper script for using Pashua, GUI library used by wiki page selector |
| keyboard_maestro.kmmacros | [[folders2web>keyboard_maestro.kmmacros|src]] | Dump of Keyboard Maestro shortcuts, see [[keyboard shortcuts]] |
| wiki.sh | [[folders2web>wiki.sh|src]] | Bash-script using rsync to update server-version of DokuWiki. Updates all files, including plugins etc, and generates sitemap for Google |
| wikilite.sh | [[folders2web>wikilite.sh|src]] | Version of wiki.sh that only updates data-files (not plugins and config), should usually be used |


h2. Legacy
These are scripts that I were working on, but are not part of the key researchr workflow, some of the code I still use, other I keep around in case I want to keep hacking on it.
| convert.rb | [[folders2web>legacy/convert.rb|src]] | Imports a Kindle My Clippings file to DevonThink |
| folders.rb | [[folders2web>legacy/folders.rb|src]] | Converts a hierarchy of folders and files to a website with index, can  process output of Scrivener and DevonThink "export to HTML" |
| library.rb | [[folders2web>legacy/library.rb|src]] | Helper functions for folders.rb |
| amatch.rb | [[folders2web>legacy/amatch.rb|src]] | Experiment with matching Kindle clippings with PDFs in Skim, not functional |
| make-clippings-nice.rb | [[folders2web>legacy/make-clippings-nice.rb|src]] | Tool to reformat some legacy clippings |
| testskim.rb | [[folders2web>legacy/testskim.rb|src]] | Related to amatch.rb |
| teststrip.rb | [[folders2web>legacy/teststrip.rb|src]] | Related to amatch.rb  |
