h1. Clojure

cd ~/

git clone git:\/\/github.com/overtone/emacs-live.git ~\/.emacs.d 

[[http://www.reddit.com/tb/1bwgxm|Clojure Toolchain Reloaded via reddit.com]]
----
  * [[http://www.clojure-toolbox.com/|The Clojure Toolbox]]
  * [[http://clojurescriptone.com/|ClojureScript One Guide]]
  * [[https://github.com/Flamefork/fleet|fleet - templating]]
  * [[http://intransitione.com/blog/take-java-to-app-store/|Take your Java application to the Mac App Store.]]
  * [[http://www.fatvat.co.uk/2009/05/jvisualvm-and-clojure.html|Fatvat: JVisualVM and Clojure]]

----
(defn arg-count [f]

  (let [m (first (.getDeclaredMethods (class f)))

        p (.getParameterTypes m)]

    (alength p))) [[http://stackoverflow.com/questions/1696693/clojure-how-to-find-out-the-arity-of-function-at-runtime|functional programming - Clojure: How to find out the arity of function at runtime? - Stack Overflow]]
----
  * [[https://github.com/Prismatic/eng-practices/blob/master/20130927-ns-organization.md|eng-practices/20130927-ns-organization.md at master · Prismatic/eng-practices]]
  * [[http://www.lisperati.com/clojure-spels/code.html|Casting SPELs with Clojure: Source Code]]
  * [[https://github.com/jandot/machine-learning-in-action|jandot/machine-learning-in-action]]
  * [[http://writingcoding.blogspot.ca/2008/06/clojure-series-table-of-contents.html|Writing/Coding: Clojure Series: Table of Contents]]
  * [[https://github.com/frenchy64/Logic-Starter/wiki|Home · frenchy64/Logic-Starter Wiki]]
  * [[https://github.com/frenchy64/Logic-Starter/wiki|Home · frenchy64/Logic-Starter Wiki]]
  * [[http://en.wikibooks.org/wiki/Clojure_Programming|Clojure Programming - Wikibooks, open books for an open world]]
  * [[http://sicpinclojure.com/|SICP in Clojure]]
  * [[https://github.com/nickik/ParadigmsOfAIProgramming/blob/master/src/ParadigmsOfAIProgramming/core.clj|ParadigmsOfAIProgramming/src/ParadigmsOfAIProgramming/core.clj at master · nickik/ParadigmsOfAIProgramming]]
  * [[https://github.com/neolee/sudoku-norvig|neolee/sudoku-norvig]]
  * [[http://jkkramer.com/sudoku.html|]]
  * [[http://juliangamble.com/blog/2012/07/13/amazing-lisp-books-living-again-in-clojure/|Amazing LISP Books living again in Clojure | Cool Pacific]]
  * [[http://juliangamble.com/blog/2012/09/15/the-little-schemer-in-clojure-chapter-9-lambda-the-ultimate-deriving-the-y-combinator/|The Little Schemer in Clojure – Chapter 9 – Lambda The Ultimate (Deriving the Y-Combinator) | Cool Pacific]]
  * [[http://java.ociweb.com/mark/clojure/ClojureCategorized.html|Clojure Categorized]]
  * [[http://java.ociweb.com/mark/clojure/ClojureCategorized.html|Clojure Categorized]]
  * [[https://github.com/konr/statistics-1|konr/statistics-1]]
  * [[http://clojure-euler.wikispaces.com/|clojure-euler - home]]
  * [[http://pramode.net/clojure/|Welcome to Code Clojure, a blog on Programming in Clojure!]]
  * [[http://ianeslick.com/2013/05/17/clojure-debugging-13-emacs-nrepl-and-ritz/|Clojure Debugging ’13: Emacs, nREPL, and Ritz | Frumious Abstractions]]
  * [[http://fluokitten.uncomplicate.org/|Fluokitten - Category Theory in Idiomatic Clojure]]
  * [[http://z.caudate.me/give-your-clojure-workflow-more-flow/|Give your clojure workflow more flow]]