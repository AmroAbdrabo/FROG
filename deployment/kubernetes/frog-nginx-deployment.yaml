apiVersion: v1
kind: ConfigMap
metadata:
  name: frog-nginx-cm
data:
  default.conf: |
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
    default $http_x_forwarded_proto;
    ''      $scheme;
    }

    # If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
    # server port the client connected to
    map $http_x_forwarded_port $proxy_x_forwarded_port {
        default $http_x_forwarded_port;
        ''      $server_port;
    }

    # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
    # Connection header that may have been passed to this server
    map $http_upgrade $proxy_connection {
        default upgrade;
        '' close;
    }

    # Apply fix for very long server names
    # Default dhparam
    ssl_dhparam /etc/nginx/dhparam/dhparam.pem;
    # Set appropriate X-Forwarded-Ssl header
    map $scheme $proxy_x_forwarded_ssl {
        default off;
        https on;
    }

    gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    log_format vhost '$host $remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent"';
    # HTTP 1.1 support
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $proxy_connection;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
    proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
    # Mitigate httpoxy attack (see README for details)
    proxy_set_header Proxy "";

    proxy_cache_path /tmp/nginx levels=1:2 keys_zone=my_zone:10m inactive=60m;
    proxy_cache_key "$scheme$request_method$host$request_uri";

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    client_max_body_size 20M;

    server {
        
      server_name chilifrog.tk;
      listen 80; # managed by Certbot

      location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|rss|txt|woff2)$ {
        proxy_pass http://frog-app-service:3000;

        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;

        proxy_redirect          off;
        proxy_buffering         on;
        proxy_connect_timeout   43200000;
        proxy_read_timeout      43200000;
        proxy_send_timeout      43200000;
        proxy_http_version      1.1;

        proxy_cache my_zone;
        proxy_cache_valid 200 1d;
        proxy_cache_use_stale   error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_ignore_headers Set-Cookie X-Accel-Expires Expires Cache-Control;
        
        expires 365d;

        gzip on;
        gzip_min_length  1100;
        gzip_buffers  4 32k;
        gzip_types    text/plain application/x-javascript text/xml text/css;
        gzip_vary on;
        
        add_header X-Proxy-Cache $upstream_cache_status;
        add_header Cache-Control "public";
        add_header  X-Upstream  $upstream_addr;
        
        access_log off;
      }

      location / {

        proxy_pass http://frog-app-service:3000;
        proxy_http_version 1.1;
        proxy_redirect      off;

        proxy_set_header    Upgrade           $http_upgrade;
        proxy_set_header    Connection        $connection_upgrade;
        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        proxy_buffering         off;
        proxy_connect_timeout 43200000;
        proxy_read_timeout    43200000;
        proxy_send_timeout    43200000;
      }

      location /sharedb {

        proxy_pass http://frog-sharedb-service:3002;
        proxy_http_version 1.1;

        proxy_set_header    Upgrade           $http_upgrade;
        proxy_set_header    Connection        $connection_upgrade;
        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        proxy_redirect      off;
        proxy_buffering     off;

        proxy_connect_timeout 43200000;
        proxy_read_timeout    43200000;
        proxy_send_timeout    43200000;
      }

      location /dashboard {
      
        proxy_pass          http://frog-dashboard-service:3000;
        proxy_http_version  1.1;
        proxy_redirect      off;

        proxy_set_header    Upgrade           $http_upgrade;
        proxy_set_header    Connection        $connection_upgrade;
        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        proxy_buffering       off;
        proxy_connect_timeout 43200000;
        proxy_read_timeout    43200000;
        proxy_send_timeout    43200000;
      }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frog-nginx-deployment
  labels:
    app: frog-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frog-nginx
  template:
    metadata:
      labels:
        app: frog-nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
          - containerPort: 80

        volumeMounts:
        - name: nginx-conf
          readOnly: true
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf

      volumes:
        - name: nginx-conf
          configMap:
            name: frog-nginx-cm
---
######## Service Configuration ########
kind: Service
apiVersion: v1
metadata:
  name: frog-nginx-service
spec:
  selector: # for pods     
    app: frog-nginx
  
  type: ClusterIP 
  ports:
  - port: 80   # port of service will be listening from internal ip address (kube-proxy will forward to this address)
    targetPort: 80   # port of pod is listening which service wiil forward
